package com.company;

import controlP5.CheckBox;
import controlP5.ControlP5;
import controlP5.Textfield;
import processing.core.PApplet;
import processing.core.PFont;
import processing.core.PImage;

import java.sql.*;
import java.util.ArrayList;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;

 class FullDB {

    public Integer getArkadaşınidsi() {
        return arkadaşınidsi;
    }

    public void setArkadaşınidsi(Integer arkadaşınidsi) {
        this.arkadaşınidsi = arkadaşınidsi;
    }

    public ArrayList<String> getARKADAŞINPOP() {
        return ARKADAŞINPOP;
    }

    public void setARKADAŞINPOP(ArrayList<String> ARKADAŞINPOP) {
        this.ARKADAŞINPOP = ARKADAŞINPOP;
    }

    public ArrayList<String> getARKADAŞINCAZ() {
        return ARKADAŞINCAZ;
    }

    public void setARKADAŞINCAZ(ArrayList<String> ARKADAŞINCAZ) {
        this.ARKADAŞINCAZ = ARKADAŞINCAZ;
    }


    public ArrayList<String> getARKADAŞINKLASIK() {
        return ARKADAŞINKLASIK;
    }

    public void setARKADAŞINKLASIK(ArrayList<String> ARKADAŞINKLASIK) {
        this.ARKADAŞINKLASIK = ARKADAŞINKLASIK;
    }


    private int arkadaşınidsi;

    private ArrayList<String> ARKADAŞINPOP= new ArrayList<String>( );
    private ArrayList<Integer>ARKADAŞINPOPID = new ArrayList<Integer>( );
    private ArrayList<String> ARKADAŞINPOPSANATCI= new ArrayList<String>( );


    private ArrayList<String> ARKADAŞINCAZ= new ArrayList<String>( );
    private ArrayList<Integer>ARKADAŞINCAZID = new ArrayList<Integer>( );
    private ArrayList<String>ARKADAŞINCAZSANATCI = new ArrayList<String>( );


    private ArrayList<String> ARKADAŞINKLASIK= new ArrayList<String>( );
    private ArrayList<Integer>ARKADAŞINKLASIKID = new ArrayList<Integer>( );
    private ArrayList<String> ARKADAŞINKLASIKSANATCI= new ArrayList<String>( );




    static  private String adminşarkıadıekliyor;
    private int kaç_kere_dinlendi;

    public static String getAdminşarkıadıekliyor() {
        return adminşarkıadıekliyor;
    }

    public static void setAdminşarkıadıekliyor(String adminşarkıadıekliyor) {
        FullDB.adminşarkıadıekliyor = adminşarkıadıekliyor;
    }

    public static String getAdmintarihekliyor() {
        return admintarihekliyor;
    }

    public static void setAdmintarihekliyor(String admintarihekliyor) {
        FullDB.admintarihekliyor = admintarihekliyor;
    }

    public static String getAdminsanatçıekliyor() {
        return adminsanatçıekliyor;
    }

    public static void setAdminsanatçıekliyor(String adminsanatçıekliyor) {
        FullDB.adminsanatçıekliyor = adminsanatçıekliyor;
    }

    public static String getAdminalbümekliyor() {
        return adminalbümekliyor;
    }

    public static void setAdminalbümekliyor(String adminalbümekliyor) {
        FullDB.adminalbümekliyor = adminalbümekliyor;
    }

    public static String getAdmintürekliyor() {
        return admintürekliyor;
    }

    public static void setAdmintürekliyor(String admintürekliyor) {
        FullDB.admintürekliyor = admintürekliyor;
    }

    public static String getAdminsüreekliyor() {
        return adminsüreekliyor;
    }

    public static void setAdminsüreekliyor(String adminsüreekliyor) {
        FullDB.adminsüreekliyor = adminsüreekliyor;
    }

    public static boolean isAdminşarkıekleyebasti() {
        return adminşarkıekleyebasti;
    }

    public static void setAdminşarkıekleyebasti(boolean adminşarkıekleyebasti) {
        FullDB.adminşarkıekleyebasti = adminşarkıekleyebasti;
    }

    private ArrayList<String> TÜMTAKİPEDİLEBİLECEKLER= new ArrayList<String>( );
    private ArrayList<Integer> TÜMTAKİPEDİLEBİLECEKLERID= new ArrayList<Integer>( );
    private ArrayList<String> KULLANICININTAKIPETTIKLERI= new ArrayList<String>( );
    private ArrayList<Integer> KULLANICININTAKIPETTIKLERIID= new ArrayList<Integer>( );



    private ArrayList<String> BizimCaz= new ArrayList<String>( );
    private ArrayList<Integer> BizimCazID= new ArrayList<Integer>( );
    private ArrayList<String> BizimCazSanatçı= new ArrayList<String>( );

    public ArrayList<String> getBizimCaz() {
        return BizimCaz;
    }

    public void setBizimCaz(ArrayList<String> bizimCaz) {
        BizimCaz = bizimCaz;
    }

    public ArrayList<Integer> getBizimCazID() {
        return BizimCazID;
    }

    public void setBizimCazID(ArrayList<Integer> bizimCazID) {
        BizimCazID = bizimCazID;
    }

    public ArrayList<String> getBizimCazSanatçı() {
        return BizimCazSanatçı;
    }

    public void setBizimCazSanatçı(ArrayList<String> bizimCazSanatçı) {
        BizimCazSanatçı = bizimCazSanatçı;
    }

    public ArrayList<String> getBizimKlasik() {
        return BizimKlasik;
    }

    public void setBizimKlasik(ArrayList<String> bizimKlasik) {
        BizimKlasik = bizimKlasik;
    }

    public ArrayList<Integer> getBizimKlasikID() {
        return BizimKlasikID;
    }

    public void setBizimKlasikID(ArrayList<Integer> bizimKlasikID) {
        BizimKlasikID = bizimKlasikID;
    }

    public ArrayList<String> getBizimKlasikSanatçı() {
        return BizimKlasikSanatçı;
    }

    public void setBizimKlasikSanatçı(ArrayList<String> bizimKlasikSanatçı) {
        BizimKlasikSanatçı = bizimKlasikSanatçı;
    }

    public ArrayList<String> getBizimPop() {
        return BizimPop;
    }

    public void setBizimPop(ArrayList<String> bizimPop) {
        BizimPop = bizimPop;
    }

    public ArrayList<Integer> getBizimPopID() {
        return BizimPopID;
    }

    public void setBizimPopID(ArrayList<Integer> bizimPopID) {
        BizimPopID = bizimPopID;
    }

    private ArrayList<String> BizimPop= new ArrayList<String>( );
    private ArrayList<Integer> BizimPopID= new ArrayList<Integer>( );
    private ArrayList<String> BizimPopSanatçı= new ArrayList<String>( );

    public ArrayList<String> getBizimPopSanatçı() {
        return BizimPopSanatçı;
    }

    public void setBizimPopSanatçı(ArrayList<String> bizimPopSanatçı) {
        BizimPopSanatçı = bizimPopSanatçı;
    }

    private ArrayList<String> BizimKlasik= new ArrayList<String>( );
    private ArrayList<Integer> BizimKlasikID= new ArrayList<Integer>( );
    private ArrayList<String> BizimKlasikSanatçı= new ArrayList<String>( );




    public ArrayList<String> getTÜMTAKİPEDİLEBİLECEKLER() {
        return TÜMTAKİPEDİLEBİLECEKLER;
    }

    public void setTÜMTAKİPEDİLEBİLECEKLER(ArrayList<String> TÜMTAKİPEDİLEBİLECEKLER) {
        this.TÜMTAKİPEDİLEBİLECEKLER = TÜMTAKİPEDİLEBİLECEKLER;
    }

    public ArrayList<Integer> getTÜMTAKİPEDİLEBİLECEKLERID() {
        return TÜMTAKİPEDİLEBİLECEKLERID;
    }

    public void setTÜMTAKİPEDİLEBİLECEKLERID(ArrayList<Integer> TÜMTAKİPEDİLEBİLECEKLERID) {
        this.TÜMTAKİPEDİLEBİLECEKLERID = TÜMTAKİPEDİLEBİLECEKLERID;
    }

    public ArrayList<String> getKULLANICININTAKIPETTIKLERI() {
        return KULLANICININTAKIPETTIKLERI;
    }

    public void setKULLANICININTAKIPETTIKLERI(ArrayList<String> KULLANICININTAKIPETTIKLERI) {
        this.KULLANICININTAKIPETTIKLERI = KULLANICININTAKIPETTIKLERI;
    }

    public ArrayList<Integer> getKULLANICININTAKIPETTIKLERIID() {
        return KULLANICININTAKIPETTIKLERIID;
    }

    public void setKULLANICININTAKIPETTIKLERIID(ArrayList<Integer> KULLANICININTAKIPETTIKLERIID) {
        this.KULLANICININTAKIPETTIKLERIID = KULLANICININTAKIPETTIKLERIID;
    }

    public ArrayList<Integer> getSEÇİLEN_ŞARKININ_DİNLEME_SAYISI() {
        return SEÇİLEN_ŞARKININ_DİNLEME_SAYISI;
    }

    public void setSEÇİLEN_ŞARKININ_DİNLEME_SAYISI(ArrayList<Integer> SEÇİLEN_ŞARKININ_DİNLEME_SAYISI) {
        this.SEÇİLEN_ŞARKININ_DİNLEME_SAYISI = SEÇİLEN_ŞARKININ_DİNLEME_SAYISI;
    }

    public String getSorgu() {
        return sorgu;
    }

    public void setSorgu(String sorgu) {
        this.sorgu = sorgu;
    }

    static  private String admintarihekliyor;
    static  private String adminsanatçıekliyor;
    static  private String adminalbümekliyor;
    static  private String admintürekliyor;
    static  private String adminsüreekliyor;
    static  boolean adminşarkıekleyebasti=false;
    static  private int toplam_dinleme_sayisi;

    private String güncellenenşarkıadı;

    public String getGüncellenenşarkıadı() {
        return güncellenenşarkıadı;
    }

    public void setGüncellenenşarkıadı(String güncellenenşarkıadı) {
        this.güncellenenşarkıadı = güncellenenşarkıadı;
    }

    public String getGüncellenenşarkınınsanatçısı() {
        return güncellenenşarkınınsanatçısı;
    }

    public void setGüncellenenşarkınınsanatçısı(String güncellenenşarkınınsanatçısı) {
        this.güncellenenşarkınınsanatçısı = güncellenenşarkınınsanatçısı;
    }



    public String getGüncellenenşarkınınülkesi() {
        return güncellenenşarkınınülkesi;
    }

    public String getGüncellenenşarkınınalbümü() {
        return güncellenenşarkınınalbümü;
    }

    public void setGüncellenenşarkınınalbümü(String güncellenenşarkınınalbümü) {
        this.güncellenenşarkınınalbümü = güncellenenşarkınınalbümü;
    }

    public void setGüncellenenşarkınınülkesi(String güncellenenşarkınınülkesi) {
        this.güncellenenşarkınınülkesi = güncellenenşarkınınülkesi;
    }



    private String güncellenenşarkınınsanatçısı;
    private String güncellenenşarkınınalbümü;
    private String güncellenenşarkınınülkesi;

    public String getGüncellenenşarkınıntürü() {
        return güncellenenşarkınıntürü;
    }

    public void setGüncellenenşarkınıntürü(String güncellenenşarkınıntürü) {
        this.güncellenenşarkınıntürü = güncellenenşarkınıntürü;
    }



    private String güncellenenşarkınıntarihi;
    private String güncellenenşarkınıntürü;

    public String getGüncellenenşarkınıntarihi() {
        return güncellenenşarkınıntarihi;
    }

    public void setGüncellenenşarkınıntarihi(String güncellenenşarkınıntarihi) {
        this.güncellenenşarkınıntarihi = güncellenenşarkınıntarihi;
    }

    private String güncellenenşarkınınsüresi;

    public String getGüncellenenşarkınınsüresi() {
        return güncellenenşarkınınsüresi;
    }

    public void setGüncellenenşarkınınsüresi(String güncellenenşarkınınsüresi) {
        this.güncellenenşarkınınsüresi = güncellenenşarkınınsüresi;
    }

    private String result=null;
    private String result2=null;
    private String result3=null;
    private String result4=null;
    private String result5=null;
    private String result6=null;
    private String result7=null;
    private String result8=null;
    private String result9=null;
    static   private String adminkullanıcıadıekliyor;
    static   private String adminkullanıcımailekliyor;
    static    private String adminkullanıcışifreekliyor;
    static   private String adminkullanıcıülkeekliyor;

    public static String getGüncellenecekşarkınındinlenmesayısı() {
        return güncellenecekşarkınındinlenmesayısı;
    }

    public static void setGüncellenecekşarkınındinlenmesayısı(String güncellenecekşarkınındinlenmesayısı) {
        FullDB.güncellenecekşarkınındinlenmesayısı = güncellenecekşarkınındinlenmesayısı;
    }

    static  boolean adminkullanıcıgüncelleyebastı=false;
    static int dinlenen_şarkı;



    public static int getDinlenen_şarkı() {
        return dinlenen_şarkı;
    }

    public static void setDinlenen_şarkı(int dinlenen_şarkı) {
        FullDB.dinlenen_şarkı = dinlenen_şarkı;
    }



    static private String güncellenecekşarkınındinlenmesayısı;
    public static boolean isAdminkullanıcıgüncelleyebastı() {
        return adminkullanıcıgüncelleyebastı;
    }

    public static void setAdminkullanıcıgüncelleyebastı(boolean adminkullanıcıgüncelleyebastı) {
        FullDB.adminkullanıcıgüncelleyebastı = adminkullanıcıgüncelleyebastı;
    }

    public static boolean isAdminekleyebastı() {
        return adminekleyebastı;
    }

    public static void setAdminekleyebastı(boolean adminekleyebastı) {
        FullDB.adminekleyebastı = adminekleyebastı;
    }

    static  private String adminkullanıcıpremiumekliyor;
    static private  boolean adminekleyebastı=false;
    static private  boolean adminesilebastı=false;

    public static boolean isAdminesilebastı() {
        return adminesilebastı;
    }

    public static void setAdminesilebastı(boolean adminesilebastı) {
        FullDB.adminesilebastı = adminesilebastı;
    }

    public String getAdminkullanıcıadıekliyor() {
        return adminkullanıcıadıekliyor;
    }

    public void setAdminkullanıcıadıekliyor(String adminkullanıcıadıekliyor) {
        this.adminkullanıcıadıekliyor = adminkullanıcıadıekliyor;
    }

    public String getAdminkullanıcımailekliyor() {
        return adminkullanıcımailekliyor;
    }

    public void setAdminkullanıcımailekliyor(String adminkullanıcımailekliyor) {
        this.adminkullanıcımailekliyor = adminkullanıcımailekliyor;
    }

    public String getAdminkullanıcışifreekliyor() {
        return adminkullanıcışifreekliyor;
    }

    public void setAdminkullanıcışifreekliyor(String adminkullanıcışifreekliyor) {
        this.adminkullanıcışifreekliyor = adminkullanıcışifreekliyor;
    }

    public String getAdminkullanıcıülkeekliyor() {
        return adminkullanıcıülkeekliyor;
    }

    public void setAdminkullanıcıülkeekliyor(String adminkullanıcıülkeekliyor) {
        this.adminkullanıcıülkeekliyor = adminkullanıcıülkeekliyor;
    }

    public boolean isAdminşarkısilebastı() {
        return adminşarkısilebastı;
    }

    public void setAdminşarkısilebastı(boolean adminşarkısilebastı) {
        this.adminşarkısilebastı = adminşarkısilebastı;
    }

    private boolean adminşarkısilebastı=false;
    public static String getAdminkullanıcıpremiumekliyor() {
        return adminkullanıcıpremiumekliyor;
    }

    public static void setAdminkullanıcıpremiumekliyor(String adminkullanıcıpremiumekliyor) {
        FullDB.adminkullanıcıpremiumekliyor = adminkullanıcıpremiumekliyor;
    }

    public String getResult10() {
        return result10;
    }

    public void setResult10(String result10) {
        this.result10 = result10;
    }

    private String result10=null;

    private String result11=null;
    private String result12=null;
    private String result13=null;

    public Integer getGüncellencekkullanıcıid() {
        return güncellencekkullanıcıid;
    }

    public void setGüncellencekkullanıcıid(Integer güncellencekkullanıcıid) {
        this.güncellencekkullanıcıid = güncellencekkullanıcıid;
    }

    private String result14=null;
    private String result15=null;
    static private  Integer güncellencekkullanıcıid;
    public Integer getHangiidlikullanıcısilinecek() {
        return hangiidlikullanıcısilinecek;
    }

    public void setHangiidlikullanıcısilinecek(Integer hangiidlikullanıcısilinecek) {
        this.hangiidlikullanıcısilinecek = hangiidlikullanıcısilinecek;
    }

    static private Integer  hangiidlikullanıcısilinecek;
    static    private ArrayList<String> tümkullanıcılarınkullanıcıadı= new ArrayList<String>( );
    static private ArrayList<Integer> tümkullanıcılarınID= new ArrayList<Integer>( );


    private ArrayList<String> ADAMINLISTEPOPSANATÇI= new ArrayList<String>( );
    private ArrayList<String> ADAMINLISTEPOP= new ArrayList<String>( );

    private ArrayList<String> ADAMINLISTECAZSANATÇI= new ArrayList<String>( );
    private ArrayList<String> ADAMINLISTECAZ= new ArrayList<String>( );
    private ArrayList<String> ADAMINLISTEKLASIKSANATÇI= new ArrayList<String>( );
    private ArrayList<String> ADAMINLISTEKLASIK= new ArrayList<String>( );
    private ArrayList<Integer>SEÇİLEN_ŞARKININ_DİNLEME_SAYISI=new ArrayList<>();

    public ArrayList<Integer> getSeçilenŞarkininDinlemeSayisi() {
        return SEÇİLEN_ŞARKININ_DİNLEME_SAYISI;
    }

    public  void setSeçilenŞarkininDinlemeSayisi(ArrayList<Integer> seçilenŞarkininDinlemeSayisi) {
        this.SEÇİLEN_ŞARKININ_DİNLEME_SAYISI = seçilenŞarkininDinlemeSayisi;
    }

    private Integer adminhangiidlişarkıyısilecek;



    public Integer getAdminhangiidlişarkıyısilecek() {
        return adminhangiidlişarkıyısilecek;
    }

    public void setAdminhangiidlişarkıyısilecek(Integer adminhangiidlişarkıyısilecek) {
        this.adminhangiidlişarkıyısilecek = adminhangiidlişarkıyısilecek;
    }

    private ArrayList<String> TümKlasikler= new ArrayList<String>( );
    private ArrayList<String> TümCazlar= new ArrayList<String>( );
    private ArrayList<String> TümPoplar= new ArrayList<String>( );


    private ArrayList<String> TümKlasiklerSanatçı= new ArrayList<String>( );
    private ArrayList<String> TümCazlarSanatçı= new ArrayList<String>( );
    private ArrayList<String> TümPoplarSanatçı= new ArrayList<String>( );


    private ArrayList<Integer> TümKlasiklerID= new ArrayList<Integer>( );
    private ArrayList<Integer> TümCazlarID= new ArrayList<Integer>( );
    private ArrayList<Integer> TümPoplarID= new ArrayList<Integer>( );

    static private ArrayList<String> TUMSARKILAR = new ArrayList<String>( );
    static private ArrayList<String> TUMSANATCILAR= new ArrayList<String>( );
    static  private ArrayList<Integer> TUMŞARKIIDLER= new ArrayList<Integer>( );
    static private ArrayList<String> TUMSANATCILARULKE= new ArrayList<String>( );

    static  private ArrayList<Integer> TUMSANATCIIDLER= new ArrayList<Integer>( );
    static  public ArrayList<String> getTUMSARKILAR() {
        return TUMSARKILAR;
    }

    public void setTUMSARKILAR(ArrayList<String> TUMSARKILAR) {
        this.TUMSARKILAR = TUMSARKILAR;
    }

    public ArrayList<String> getTUMSANATCILAR() {
        return TUMSANATCILAR;
    }

    public static ArrayList<Integer> getTUMŞARKIIDLER() {
        return TUMŞARKIIDLER;
    }

    public static void setTUMŞARKIIDLER(ArrayList<Integer> TUMŞARKIIDLER) {
        FullDB.TUMŞARKIIDLER = TUMŞARKIIDLER;
    }

    public void setTUMSANATCILAR(ArrayList<String> TUMSANATCILAR) {
        this.TUMSANATCILAR = TUMSANATCILAR;
    }

    public ArrayList<Integer> getSanatcıtablosuıd() {
        return sanatcıtablosuıd;
    }

    public void setSanatcıtablosuıd(ArrayList<Integer> sanatcıtablosuıd) {
        this.sanatcıtablosuıd = sanatcıtablosuıd;
    }

    public ArrayList<String> getSanatçıtablosu() {
        return sanatçıtablosu;
    }

    public void setSanatçıtablosu(ArrayList<String> sanatçıtablosu) {
        this.sanatçıtablosu = sanatçıtablosu;
    }

    private ArrayList<Integer> sanatcıtablosuıd = new ArrayList<Integer>( );
    private ArrayList<String> sanatçıtablosu = new ArrayList<String>( );

    private String ulke_bilgisi=null;
    private ArrayList<String> ulkeye_gore_top_10_liste = new ArrayList<String>( );
    private ArrayList<String> genel_top_10 = new ArrayList<String>( );
    private ArrayList<String> pop = new ArrayList<String>( );
    private ArrayList<String> pop_şarkıcı = new ArrayList<String>( );
    private ArrayList<String> caz = new ArrayList<String>( );
    private ArrayList<String> caz_şarkıcı = new ArrayList<String>( );
    private ArrayList<String> Kullanıcı_Bilgisi= new ArrayList<String>( );
    private ArrayList<String> klasik = new ArrayList<String>( );
    private ArrayList<String> klasik_şarkıcı= new ArrayList<String>( );
    private ArrayList<String> top_10_şarkıcıları= new ArrayList<String>( );
    private ArrayList<String> yerel_top_10_şarkıcıları= new ArrayList<String>( );
    private ArrayList<String> ADMINSANATCILISTE= new ArrayList<String>( );
    private ArrayList<String> ADMINSANATCILISTEULKE= new ArrayList<String>( );
    private ArrayList<String> ADMINSANATCILISTEID= new ArrayList<String>( );

    public ArrayList<String> getADMINSANATCILISTEID() {
        return ADMINSANATCILISTEID;
    }

    public void setADMINSANATCILISTEID(ArrayList<String> ADMINSANATCILISTEID) {
        this.ADMINSANATCILISTEID = ADMINSANATCILISTEID;
    }

    public ArrayList<String> getADMINSANATCILISTE() {
        return ADMINSANATCILISTE;
    }

    public void setADMINSANATCILISTE(ArrayList<String> ADMINSANATCILISTE) {
        this.ADMINSANATCILISTE = ADMINSANATCILISTE;
    }

    public ArrayList<String> getADMINSANATCILISTEULKE() {
        return ADMINSANATCILISTEULKE;
    }

    public void setADMINSANATCILISTEULKE(ArrayList<String> ADMINSANATCILISTEULKE) {
        this.ADMINSANATCILISTEULKE = ADMINSANATCILISTEULKE;
    }

    public String getResult7() {
        return result7;
    }

    public static int getToplam_dinleme_sayisi() {
        return toplam_dinleme_sayisi;
    }

    public static void setToplam_dinleme_sayisi(int toplam_dinleme_sayisi) {
        FullDB.toplam_dinleme_sayisi = toplam_dinleme_sayisi;
    }



    public void setResult7(String result7) {
        this.result7 = result7;
    }

    public String getResult8() {
        return result8;
    }

    public void setResult8(String result8) {
        this.result8 = result8;
    }

    public String getResult9() {
        return result9;
    }

    public void setResult9(String result9) {
        this.result9 = result9;
    }

    public ArrayList<String> getPop() {
        return pop;
    }

    public void setPop(ArrayList<String> pop) {
        this.pop = pop;
    }

    public ArrayList<String> getCaz() {
        return caz;
    }

    public void setCaz(ArrayList<String> caz) {
        this.caz = caz;
    }

    public ArrayList<String> getKlasik() {
        return klasik;
    }

    public void setKlasik(ArrayList<String> klasik) {
        this.klasik = klasik;
    }

    public boolean isAdminsanatçıekleyebastı() {
        return adminsanatçıekleyebastı;
    }

    public void setAdminsanatçıekleyebastı(boolean adminsanatçıekleyebastı) {
        this.adminsanatçıekleyebastı = adminsanatçıekleyebastı;
    }

    static  boolean adminsanatçıekleyebastı=false;
    static String eklenileceksanatçı;

    public static String getEklenileceksanatçı() {
        return eklenileceksanatçı;
    }

    public static void setEklenileceksanatçı(String eklenileceksanatçı) {
        FullDB.eklenileceksanatçı = eklenileceksanatçı;
    }

    public static String getEklenileceksanatçıyaülke() {
        return eklenileceksanatçıyaülke;
    }

    public static void setEklenileceksanatçıyaülke(String eklenileceksanatçıyaülke) {
        FullDB.eklenileceksanatçıyaülke = eklenileceksanatçıyaülke;
    }

    static String eklenileceksanatçıyaülke;

    public String getResult5() {
        return result5;
    }

    public String getResult6() {
        return result6;
    }

    public void setResult6(String result6) {
        this.result6 = result6;
    }

    public ArrayList<String> getGenel_top_10() {
        return genel_top_10;
    }

    public void setGenel_top_10(ArrayList<String> genel_top_10) {
        this.genel_top_10 = genel_top_10;
    }

    public void setResult5(String result5) {
        this.result5 = result5;
    }

    public ArrayList<String> getUlkeye_gore_top_10_liste() {
        return ulkeye_gore_top_10_liste;
    }

    public void setUlkeye_gore_top_10_liste(ArrayList<String> ulkeye_gore_top_10_liste) {
        this.ulkeye_gore_top_10_liste = ulkeye_gore_top_10_liste;
    }

    public String getUlke_bilgisi() {
        return ulke_bilgisi;
    }

    public void setUlke_bilgisi(String ulke_bilgisi) {
        this.ulke_bilgisi = ulke_bilgisi;
    }

    String a="Kullanıcı_Adı";


    public String getResult11() {
        return result11;
    }

    public void setResult11(String result11) {
        this.result11 = result11;
    }

    public String getResult12() {
        return result12;
    }

    public void setResult12(String result12) {
        this.result12 = result12;
    }

    public String getResult13() {
        return result13;
    }

    public void setResult13(String result13) {
        this.result13 = result13;
    }

    public ArrayList<String> getPop_şarkıcı() {
        return pop_şarkıcı;
    }

    public void setPop_şarkıcı(ArrayList<String> pop_şarkıcı) {
        this.pop_şarkıcı = pop_şarkıcı;
    }

    public ArrayList<String> getCaz_şarkıcı() {
        return caz_şarkıcı;
    }

    public void setCaz_şarkıcı(ArrayList<String> caz_şarkıcı) {
        this.caz_şarkıcı = caz_şarkıcı;
    }

    public ArrayList<String> getKlasik_şarkıcı() {
        return klasik_şarkıcı;
    }

    public void setKlasik_şarkıcı(ArrayList<String> klasik_şarkıcı) {
        this.klasik_şarkıcı = klasik_şarkıcı;
    }

    public String getResult14() {
        return result14;
    }
    public void setResult14(String result14) {
        this.result14 = result14;
    }

    public String getResult15() {
        return result15;
    }

    public void setResult15(String result15) {
        this.result15 = result15;
    }

    public ArrayList<String> getKullanıcı_Bilgisi() {
        return Kullanıcı_Bilgisi;
    }

    public void setKullanıcı_Bilgisi(ArrayList<String> kullanıcı_Bilgisi) {
        Kullanıcı_Bilgisi = kullanıcı_Bilgisi;
    }

    public ArrayList<String> getTop_10_şarkıcıları() {
        return top_10_şarkıcıları;
    }

    public void setTop_10_şarkıcıları(ArrayList<String> top_10_şarkıcıları) {
        this.top_10_şarkıcıları = top_10_şarkıcıları;
    }



    public ArrayList<String> getYerel_top_10_şarkıcıları() {
        return yerel_top_10_şarkıcıları;
    }

    public void setYerel_top_10_şarkıcıları(ArrayList<String> yerel_top_10_şarkıcıları) {
        this.yerel_top_10_şarkıcıları = yerel_top_10_şarkıcıları;
    }

    public ArrayList<String> getADAMINLISTEPOPSANATÇI() {
        return ADAMINLISTEPOPSANATÇI;
    }

    public void setADAMINLISTEPOPSANATÇI(ArrayList<String> ADAMINLISTEPOPSANATÇI) {
        this.ADAMINLISTEPOPSANATÇI = ADAMINLISTEPOPSANATÇI;
    }
    static boolean adminşarkıgüncelleyebastı=false;
    public ArrayList<String> getADAMINLISTEPOP() {
        return ADAMINLISTEPOP;
    }

    public void setADAMINLISTEPOP(ArrayList<String> ADAMINLISTEPOP) {
        this.ADAMINLISTEPOP = ADAMINLISTEPOP;
    }

    public static boolean isAdminşarkıgüncelleyebastı() {
        return adminşarkıgüncelleyebastı;
    }

    public static void setAdminşarkıgüncelleyebastı(boolean adminşarkıgüncelleyebastı) {
        FullDB.adminşarkıgüncelleyebastı = adminşarkıgüncelleyebastı;
    }

    public ArrayList<String> getADAMINLISTECAZSANATÇI() {
        return ADAMINLISTECAZSANATÇI;
    }

    public void setADAMINLISTECAZSANATÇI(ArrayList<String> ADAMINLISTECAZSANATÇI) {
        this.ADAMINLISTECAZSANATÇI = ADAMINLISTECAZSANATÇI;
    }

    public ArrayList<String> getADAMINLISTECAZ() {
        return ADAMINLISTECAZ;
    }

    public void setADAMINLISTECAZ(ArrayList<String> ADAMINLISTECAZ) {
        this.ADAMINLISTECAZ = ADAMINLISTECAZ;
    }

    public ArrayList<String> getADAMINLISTEKLASIKSANATÇI() {
        return ADAMINLISTEKLASIKSANATÇI;
    }

    public void setADAMINLISTEKLASIKSANATÇI(ArrayList<String> ADAMINLISTEKLASIKSANATÇI) {
        this.ADAMINLISTEKLASIKSANATÇI = ADAMINLISTEKLASIKSANATÇI;
    }

    public ArrayList<String> getADAMINLISTEKLASIK() {
        return ADAMINLISTEKLASIK;
    }

    public void setADAMINLISTEKLASIK(ArrayList<String> ADAMINLISTEKLASIK) {
        this.ADAMINLISTEKLASIK = ADAMINLISTEKLASIK;
    }

    public ArrayList<String> getTümKlasikler() {
        return TümKlasikler;
    }

    public void setTümKlasikler(ArrayList<String> tümKlasikler) {
        TümKlasikler = tümKlasikler;
    }

    public ArrayList<String> getTümCazlar() {
        return TümCazlar;
    }

    public void setTümCazlar(ArrayList<String> tümCazlar) {
        TümCazlar = tümCazlar;
    }

    public ArrayList<String> getTümPoplar() {
        return TümPoplar;
    }

    public void setTümPoplar(ArrayList<String> tümPoplar) {
        TümPoplar = tümPoplar;
    }

    public ArrayList<String> getTümKlasiklerSanatçı() {
        return TümKlasiklerSanatçı;
    }

    public void setTümKlasiklerSanatçı(ArrayList<String> tümKlasiklerSanatçı) {
        TümKlasiklerSanatçı = tümKlasiklerSanatçı;
    }

    public ArrayList<String> getTümCazlarSanatçı() {
        return TümCazlarSanatçı;
    }

    public void setTümCazlarSanatçı(ArrayList<String> tümCazlarSanatçı) {
        TümCazlarSanatçı = tümCazlarSanatçı;
    }

    public ArrayList<String> getTümPoplarSanatçı() {
        return TümPoplarSanatçı;
    }

    public void setTümPoplarSanatçı(ArrayList<String> tümPoplarSanatçı) {
        TümPoplarSanatçı = tümPoplarSanatçı;
    }

    public ArrayList<Integer> getTümKlasiklerID() {
        return TümKlasiklerID;
    }

    public void setTümKlasiklerID(ArrayList<Integer> tümKlasiklerID) {
        TümKlasiklerID = tümKlasiklerID;
    }

    public ArrayList<Integer> getTümCazlarID() {
        return TümCazlarID;
    }

    public void setTümCazlarID(ArrayList<Integer> tümCazlarID) {
        TümCazlarID = tümCazlarID;
    }

    public ArrayList<Integer> getTümPoplarID() {
        return TümPoplarID;
    }

    public void setTümPoplarID(ArrayList<Integer> tümPoplarID) {
        TümPoplarID = tümPoplarID;
    }

    public String getA() {
        return a;
    }

    public void setA(String a) {
        this.a = a;
    }

    public ArrayList<Integer> getC() {
        return c;
    }

    public void setC(ArrayList<Integer> c) {
        this.c = c;
    }

    private String kopyaşifre;

    public String getKopyaşifre() {
        return kopyaşifre;
    }

    public void setKopyaşifre(String kopyaşifre) {
        this.kopyaşifre = kopyaşifre;
    }
    ArrayList <Integer> c=new ArrayList<>();
    private Integer admamınidX=0;
    //Create a method to connect to database
    static   private String seçilenşarkınıntürü;
    static boolean kullanıcıtakiptençıkmakistiyor=false;

    public static boolean isKullanıcıtakiptençıkmakistiyor() {
        return kullanıcıtakiptençıkmakistiyor;
    }

    public static void setKullanıcıtakiptençıkmakistiyor(boolean kullanıcıtakiptençıkmakistiyor) {
        FullDB.kullanıcıtakiptençıkmakistiyor = kullanıcıtakiptençıkmakistiyor;
    }

    public static boolean isKullanıcıtakipetmekistiyor() {
        return kullanıcıtakipetmekistiyor;
    }

    public static void setKullanıcıtakipetmekistiyor(boolean kullanıcıtakipetmekistiyor) {
        FullDB.kullanıcıtakipetmekistiyor = kullanıcıtakipetmekistiyor;
    }

    static boolean kullanıcıtakipetmekistiyor=false;
    public Integer getAdmamınidX() {
        return admamınidX;
    }

    public void setAdmamınidX(Integer admamınidX) {
        this.admamınidX = admamınidX;
    }

    public String getSeçilenşarkınıntürü() {
        return seçilenşarkınıntürü;
    }

    public void setSeçilenşarkınıntürü(String seçilenşarkınıntürü) {
        this.seçilenşarkınıntürü = seçilenşarkınıntürü;
    }

    static private  String güncellenecekkullanıcıadı;
    static private  String güncellenecekkulanıcışifre;
    static  private  String güncellenecekkulanıcıülke;
    static  private  String güncellenecekkulanıcıdurum;
    static  private  String güncellenecekkulanıcımail;



    public static String getGüncellenecekkullanıcıadı() {
        return güncellenecekkullanıcıadı;
    }

    public static void setGüncellenecekkullanıcıadı(String güncellenecekkullanıcıadı) {
        FullDB.güncellenecekkullanıcıadı = güncellenecekkullanıcıadı;
    }

    public static String getGüncellenecekkulanıcışifre() {
        return güncellenecekkulanıcışifre;
    }

    public static void setGüncellenecekkulanıcışifre(String güncellenecekkulanıcışifre) {
        FullDB.güncellenecekkulanıcışifre = güncellenecekkulanıcışifre;
    }

    public static String getGüncellenecekkulanıcıülke() {
        return güncellenecekkulanıcıülke;
    }

    public static void setGüncellenecekkulanıcıülke(String güncellenecekkulanıcıülke) {
        FullDB.güncellenecekkulanıcıülke = güncellenecekkulanıcıülke;
    }

    public static String getGüncellenecekkulanıcıdurum() {
        return güncellenecekkulanıcıdurum;
    }

    public static void setGüncellenecekkulanıcıdurum(String güncellenecekkulanıcıdurum) {
        FullDB.güncellenecekkulanıcıdurum = güncellenecekkulanıcıdurum;
    }

    public static String getGüncellenecekkulanıcımail() {
        return güncellenecekkulanıcımail;
    }

    public static void setGüncellenecekkulanıcımail(String güncellenecekkulanıcımail) {
        FullDB.güncellenecekkulanıcımail = güncellenecekkulanıcımail;
    }
    private Integer takipideğişecekkullanıcııd;

    public Integer getTakipideğişecekkullanıcııd() {
        return takipideğişecekkullanıcııd;
    }

    public void setTakipideğişecekkullanıcııd(Integer takipideğişecekkullanıcııd) {
        this.takipideğişecekkullanıcııd = takipideğişecekkullanıcııd;
    }

    public static ArrayList<String> getTUMSANATCILARULKE() {
        return TUMSANATCILARULKE;
    }

    public static void setTUMSANATCILARULKE(ArrayList<String> TUMSANATCILARULKE) {
        FullDB.TUMSANATCILARULKE = TUMSANATCILARULKE;
    }

    public static ArrayList<Integer> getTUMSANATCIIDLER() {
        return TUMSANATCIIDLER;
    }

    public static void setTUMSANATCIIDLER(ArrayList<Integer> TUMSANATCIIDLER) {
        FullDB.TUMSANATCIIDLER = TUMSANATCIIDLER;
    }



    String sorgu="Update sarki set dinlenme_sayisi=dinlenme_sayisi+1 where idSarki= ?";


    public void setArkadaşınidsi(int arkadaşınidsi) {
        this.arkadaşınidsi = arkadaşınidsi;
    }

    public ArrayList<Integer> getARKADAŞINPOPID() {
        return ARKADAŞINPOPID;
    }

    public void setARKADAŞINPOPID(ArrayList<Integer> ARKADAŞINPOPID) {
        this.ARKADAŞINPOPID = ARKADAŞINPOPID;
    }

    public ArrayList<String> getARKADAŞINPOPSANATCI() {
        return ARKADAŞINPOPSANATCI;
    }

    public void setARKADAŞINPOPSANATCI(ArrayList<String> ARKADAŞINPOPSANATCI) {
        this.ARKADAŞINPOPSANATCI = ARKADAŞINPOPSANATCI;
    }

    public ArrayList<Integer> getARKADAŞINCAZID() {
        return ARKADAŞINCAZID;
    }

    public void setARKADAŞINCAZID(ArrayList<Integer> ARKADAŞINCAZID) {
        this.ARKADAŞINCAZID = ARKADAŞINCAZID;
    }

    public ArrayList<String> getARKADAŞINCAZSANATCI() {
        return ARKADAŞINCAZSANATCI;
    }

    public void setARKADAŞINCAZSANATCI(ArrayList<String> ARKADAŞINCAZSANATCI) {
        this.ARKADAŞINCAZSANATCI = ARKADAŞINCAZSANATCI;
    }

    public boolean isBizçıkarmayapıcaz() {
        return bizçıkarmayapıcaz;
    }

    public void setBizçıkarmayapıcaz(boolean bizçıkarmayapıcaz) {
        this.bizçıkarmayapıcaz = bizçıkarmayapıcaz;
    }

    public boolean isBizeklemeyapıcaz() {
        return bizeklemeyapıcaz;
    }

    public void setBizeklemeyapıcaz(boolean bizeklemeyapıcaz) {
        this.bizeklemeyapıcaz = bizeklemeyapıcaz;
    }

    private boolean bizeklemeyapıcaz=false;
    private  boolean bizçıkarmayapıcaz=false;

    public ArrayList<Integer> getARKADAŞINKLASIKID() {
        return ARKADAŞINKLASIKID;
    }

    public void setARKADAŞINKLASIKID(ArrayList<Integer> ARKADAŞINKLASIKID) {
        this.ARKADAŞINKLASIKID = ARKADAŞINKLASIKID;
    }

    public int getAbc() {
        return abc;
    }

    public void setAbc(int abc) {
        this.abc = abc;
    }

    private int abc=-1;
    public ArrayList<String> getARKADAŞINKLASIKSANATCI() {
        return ARKADAŞINKLASIKSANATCI;
    }

    public void setARKADAŞINKLASIKSANATCI(ArrayList<String> ARKADAŞINKLASIKSANATCI) {
        this.ARKADAŞINKLASIKSANATCI = ARKADAŞINKLASIKSANATCI;
    }

    void createConnection(){
        try {
            //Connect to Database
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/şarkı", "root", "Gogol1221.");

            Statement query1221=connect.createStatement();
            ResultSet xxxx=query1221.executeQuery("Select * from kullanıcı where abonelik_türü='Premium'  AND durum='Kullanıcı'   ");
            while(xxxx.next()){
                int x=xxxx.getInt("ID");
                if (!TÜMTAKİPEDİLEBİLECEKLERID.contains(x)){
                    TÜMTAKİPEDİLEBİLECEKLERID.add(x);
                    TÜMTAKİPEDİLEBİLECEKLER.add(xxxx.getString("Kullanıcı_Adı"));
                }
            }
            /*

    private ArrayList<String> TÜMTAKİPEDİLEBİLECEKLER= new ArrayList<String>( );
    private ArrayList<Integer> TÜMTAKİPEDİLEBİLECEKLERID= new ArrayList<Integer>( );
    private ArrayList<String> KULLANICININTAKIPETTIKLERI= new ArrayList<String>( );
    private ArrayList<Integer> KULLANICININTAKIPETTIKLERIID= new ArrayList<Integer>( );

             */










            if (isAdminekleyebastı()==true) {
                Statement query = connect.createStatement();
                query.executeUpdate("INSERT INTO Kullanıcı(Kullanıcı_Adı,email,şifre,abonelik_türü,ülke,durum) VALUES('" + getAdminkullanıcıadıekliyor() + "','" + adminkullanıcımailekliyor + "','" + adminkullanıcışifreekliyor + "','" + adminkullanıcıpremiumekliyor + "','" + adminkullanıcımailekliyor + "','Kullanıcı')");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");
            }
            if (isAdminesilebastı()==true){
                Statement query222 = connect.createStatement();
                query222.executeUpdate("Delete from kullanıcı where ID='"+hangiidlikullanıcısilinecek +"'");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");


            }


            if (isAdminkullanıcıgüncelleyebastı()==true){
                Statement kullanıcıgüncelleme=connect.createStatement();
                //  kullanıcıgüncelleme.executeUpdate("UPDATE kullanıcı SET Kullanıcı_Adı='"+getGüncellenecekkullanıcıadı()+"' ,email='"+getGüncellenecekkulanıcımail()+"' , şifre='"+getGüncellenecekkulanıcışifre()+"'  , abonelik_türü='"+getGüncellenecekkulanıcıdurum()+"'  , ülke='"+getGüncellenecekkulanıcıülke()+"'   ,durum='Kullanıcı' WHERE ID='"+getGüncellencekkullanıcıid()+'"');
                kullanıcıgüncelleme.executeUpdate(" UPDATE `şarkı`.`kullanıcı` SET `Kullanıcı_Adı` = '"+getGüncellenecekkullanıcıadı()+"', `email` = '"+getGüncellenecekkulanıcımail()+"', `şifre` = '"+getGüncellenecekkulanıcışifre()+"', `abonelik_türü` = '"+getGüncellenecekkulanıcıdurum()+"', `ülke` = '"+getGüncellenecekkulanıcıülke()+"' WHERE (`ID` = '"+getGüncellencekkullanıcıid()+"')");

                int değişenindex=getTümkullanıcılarınID().indexOf(getGüncellencekkullanıcıid());
                getTümkullanıcılarınkullanıcıadı().set(değişenindex,getGüncellenecekkullanıcıadı());

            }
            if (isAdminşarkısilebastı()==true){

                Statement adminşarkısilmedurumu=connect.createStatement();
                adminşarkısilmedurumu.executeUpdate(" DELETE from şarkılar  WHERE  ID='"+getAdminhangiidlişarkıyısilecek()+"'");

            }
            Statement query26 = connect.createStatement();







            Statement seçilenidlişarkıbilgileri=connect.createStatement();
            ResultSet şarkıtümbilgi =seçilenidlişarkıbilgileri.executeQuery("Select * from şarkılar Where ID='"+adminhangiidlişarkıyısilecek+"' ");



            if(isAdminşarkıekleyebasti()==true){
                Statement query = connect.createStatement();
                query.executeUpdate("INSERT INTO `şarkı`.`şarkılar` (`Şarkı`, `Tarih`, `Sanatçı`, `Albüm`, `Tür`, `Süre`, `Dinleme_Sayısı`) VALUES ('"+getAdminşarkıadıekliyor()+"','"+getAdmintarihekliyor()+"','"+getAdminsanatçıekliyor()+"','"+getAdminalbümekliyor()+"','"+getAdmintürekliyor()+"','"+getAdminsüreekliyor()+"','"+0+"')");

            }







            if (isAdminşarkıgüncelleyebastı()==true){
                Statement qweqwe=connect.createStatement();


                qweqwe.executeUpdate("     UPDATE `şarkı`.`şarkılar` SET `Şarkı` = '"+getGüncellenenşarkıadı()+"', `Tarih` = '"+getGüncellenenşarkınıntarihi()+"', `Sanatçı` = '"+getGüncellenenşarkınınsanatçısı()+"', `Albüm` = '"+getGüncellenenşarkınınalbümü()+"', `Tür` = '"+getGüncellenenşarkınıntürü()+"', `Süre` = '"+getGüncellenenşarkınınsüresi()+"', `Dinleme_Sayısı` = '"+getGüncellenecekşarkınındinlenmesayısı()+"' WHERE (`ID` = '"+adminhangiidlişarkıyısilecek+"');");


            }


            if (adminsanatçıekleyebastı==true)
            {
                Statement sanatçıekleme=connect.createStatement();
                sanatçıekleme.executeUpdate("INSERT INTO sanatçı(Sanatçı_Adı,Ülke) VALUES('"+getEklenileceksanatçı()+"','"+eklenileceksanatçıyaülke+"')");

            }



            while(şarkıtümbilgi.next()) {
                setGüncellenenşarkıadı(şarkıtümbilgi.getString("Şarkı"));
                setGüncellenenşarkınınalbümü(şarkıtümbilgi.getString("Albüm"));
                setGüncellenenşarkınıntarihi(şarkıtümbilgi.getString("Tarih"));
                setGüncellenenşarkınıntürü(şarkıtümbilgi.getString("Tür"));
                setGüncellenenşarkınınsanatçısı(şarkıtümbilgi.getString("Sanatçı"));
                setGüncellenecekşarkınındinlenmesayısı(şarkıtümbilgi.getString("Dinleme_Sayısı"));
                setGüncellenenşarkınınsüresi(şarkıtümbilgi.getString("Süre"));

            }








            Statement query222222 = connect.createStatement();

            ResultSet memati2=   query222222.executeQuery("Select * from sanatçı ");
            while (memati2.next()){
                int x= memati2.getInt("ID");
                if (!sanatcıtablosuıd.contains(x))
                {
                    sanatcıtablosuıd.add(x);
                    sanatçıtablosu.add(memati2.getString("Sanatçı_Adı"));
                }
            }



            Statement query22222 = connect.createStatement();

            ResultSet memati=   query22222.executeQuery("Select * from şarkılar ");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");

            while (memati.next()){

                int x=    memati.getInt("ID");
                if (!TUMŞARKIIDLER.contains(x)) {
                    TUMSARKILAR.add(memati.getString("Şarkı"));
                    TUMSANATCILAR.add (  memati.getString("Sanatçı"));
                    TUMŞARKIIDLER.add(x);
                }
            }
            if(dinlenen_şarkı>-1){
                ResultSet rs17;
                TUMŞARKIIDLER.indexOf(dinlenen_şarkı);
                String sorgu="Update şarkılar set Dinleme_Sayısı=Dinleme_Sayısı+1 where ID= '"+TUMŞARKIIDLER.get(dinlenen_şarkı)+"'";
                query26.executeUpdate(sorgu);
                dinlenen_şarkı=-1;
            }


            Statement query2222 = connect.createStatement();
            ResultSet güncelenenkullanıcı=   query2222.executeQuery("Select * from kullanıcı where ID='"+güncellencekkullanıcıid +"'");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");
            while(güncelenenkullanıcı.next()){
                güncellenecekkullanıcıadı=güncelenenkullanıcı.getString("Kullanıcı_Adı");
                güncellenecekkulanıcıdurum=güncelenenkullanıcı.getString("abonelik_türü");
                güncellenecekkulanıcıülke=güncelenenkullanıcı.getString("ülke");
                güncellenecekkulanıcımail=güncelenenkullanıcı.getString("email");
                güncellenecekkulanıcışifre=güncelenenkullanıcı.getString("şifre");




            }

























            Statement query2333 = connect.createStatement();

            ResultSet tümkullanıcılistesi=query2333.executeQuery("Select DISTINCT Kullanıcı_Adı,ID FROM kullanıcı");


            while (tümkullanıcılistesi.next()) {

                int   xxx = tümkullanıcılistesi.getInt("ID");

                if (!tümkullanıcılarınID.contains(xxx)){
                    tümkullanıcılarınID.add(xxx);
                    String xx = tümkullanıcılistesi.getString("Kullanıcı_Adı");
                    tümkullanıcılarınkullanıcıadı.add(xx);}

            }


//BURASINDAIZ AADAMIN ID BULUNDU
            Statement   R55=connect.createStatement();
            ResultSet r55=R55.executeQuery("SELECT DISTINCT ID FROM kullanıcı WHERE     Kullanıcı_Adı='"+getResult2()+"' AND Şifre='"+getKopyaşifre()+"'  ");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");
            while (r55.next()) {
                int xx = r55.getInt("ID");

                admamınidX=xx;
            }


            Statement adamıntakipettikleri=connect.createStatement();
            ResultSet adamıntakipettikleriz=adamıntakipettikleri.executeQuery("Select takipedilen from takip where takipçi =' "+admamınidX + "'");

            while (adamıntakipettikleriz.next()){
                int x=adamıntakipettikleriz.getInt("takipedilen");
                if (!KULLANICININTAKIPETTIKLERIID.contains(x))
                {
                    KULLANICININTAKIPETTIKLERIID.add(x);
                }
            }
/*

    private ArrayList<String> TÜMTAKİPEDİLEBİLECEKLER= new ArrayList<String>( );
    private ArrayList<Integer> TÜMTAKİPEDİLEBİLECEKLERID= new ArrayList<Integer>( );
    private ArrayList<String> KULLANICININTAKIPETTIKLERI= new ArrayList<String>( );
    private ArrayList<Integer> KULLANICININTAKIPETTIKLERIID= new ArrayList<Integer>( );

 */








            if (isKullanıcıtakiptençıkmakistiyor()==true){
                System.out.println("!!!!");
                Statement silme= connect.createStatement();
                silme.executeUpdate("Delete from takip where takipçi= '"+ admamınidX+"' AND takipedilen= '"+getTakipideğişecekkullanıcııd() +"'   ");
            }
            if (isKullanıcıtakipetmekistiyor()==true){
                System.out.println("???");
                Statement ekleme= connect.createStatement();
                ekleme.executeUpdate("INSERT INTO  takip(takipçi,takipedilen)  VALUES('"+admamınidX+"','"+getTakipideğişecekkullanıcııd()+"') ");

            }



            Statement arkadşın1=connect.createStatement();
            Statement arkadşın2=connect.createStatement();
            Statement arkadşın=connect.createStatement();

            if (arkadaşınidsi!=0) {
                getARKADAŞINCAZ().clear();
                getARKADAŞINPOP().clear();
                getARKADAŞINKLASIK().clear();

                getARKADAŞINCAZSANATCI().clear();
                getARKADAŞINPOPSANATCI().clear();
                getARKADAŞINKLASIKSANATCI().clear();

                getARKADAŞINCAZID().clear();
                getARKADAŞINPOPID().clear();
                getARKADAŞINKLASIKID()   .clear();
                ResultSet cazlar = arkadşın.executeQuery("Select * from liste,şarkılar WHERE  Tür='Caz' AND liste.Şarkı_ID =şarkılar.ID  AND Kullanıcı_ID= '" + arkadaşınidsi + "' ");
                ResultSet poplar = arkadşın1.executeQuery("Select * from liste,şarkılar WHERE  Tür='Pop' AND liste.Şarkı_ID =şarkılar.ID  AND Kullanıcı_ID= '" + arkadaşınidsi + "' ");
                ResultSet klasikler = arkadşın2.executeQuery("Select * from liste,şarkılar WHERE  Tür='Klasik' AND liste.Şarkı_ID =şarkılar.ID  AND Kullanıcı_ID= '" + arkadaşınidsi + "' ");


                while (cazlar.next()) {

                    int q= cazlar.getInt("ID");
                    if (!getARKADAŞINCAZID().contains(q)) {
                        ARKADAŞINCAZID.add(q);
                        ARKADAŞINCAZ.add(cazlar.getString("Şarkı"));
                        ARKADAŞINCAZSANATCI.add(cazlar.getString("Sanatçı"));
                    }

                }



                while (poplar.next()) {

                    int q= poplar.getInt("ID");
                    if (!getARKADAŞINPOPID().contains(q)) {
                        ARKADAŞINPOPID.add(q);
                        ARKADAŞINPOP.add(poplar.getString("Şarkı"));
                        ARKADAŞINPOPSANATCI.add(poplar.getString("Sanatçı"));
                    }

                }



                while (klasikler.next()) {

                    int q= klasikler.getInt("ID");
                    if (!getARKADAŞINKLASIKID().contains(q)) {
                        ARKADAŞINKLASIKID.add(q);
                        ARKADAŞINKLASIK.add(klasikler.getString("Şarkı"));
                        ARKADAŞINKLASIKSANATCI.add(klasikler.getString("Sanatçı"));
                    }

                }

            }

            Statement qwe= connect.createStatement();
            Statement qwe1= connect.createStatement();
            Statement qwe2= connect.createStatement();

            ResultSet bizimcazlar = qwe1.executeQuery("Select * from liste,şarkılar WHERE  Tür='Caz' AND liste.Şarkı_ID =şarkılar.ID  AND Kullanıcı_ID= '" + admamınidX + "' ");
            ResultSet bizimpoplar = qwe2.executeQuery("Select * from liste,şarkılar WHERE  Tür='Pop' AND liste.Şarkı_ID =şarkılar.ID  AND Kullanıcı_ID= '" + admamınidX + "' ");
            ResultSet bizimklasikler = qwe.executeQuery("Select * from liste,şarkılar WHERE  Tür='Klasikler' AND liste.Şarkı_ID =şarkılar.ID  AND Kullanıcı_ID= '" + admamınidX + "' ");



            while (bizimcazlar.next()){

                int x=bizimcazlar.getInt("ID");
                if (!BizimCazID.contains(x)){
                    BizimCazID.add(x);
                    BizimCaz.add(bizimcazlar.getString("Şarkı"));
                    BizimCazSanatçı.add(bizimcazlar.getString("Sanatçı"));

                }

            }

            while (bizimklasikler.next()){

                int x=bizimklasikler.getInt("ID");
                if (!BizimKlasikID.contains(x)){
                    BizimKlasikID.add(x);
                    BizimKlasik.add(bizimklasikler.getString("Şarkı"));
                    BizimKlasikSanatçı.add(bizimklasikler.getString("Sanatçı"));

                }

            }

            while (bizimpoplar.next()){

                int x=bizimpoplar.getInt("ID");
                if (!BizimPopID.contains(x)){
                    BizimPopID.add(x);
                    BizimPop.add(bizimpoplar.getString("Şarkı"));
                    BizimPopSanatçı.add(bizimpoplar.getString("Sanatçı"));

                }

            }




            if (isBizeklemeyapıcaz()==true){
                Statement ekl= connect.createStatement();
                ekl.executeUpdate("INSERT INTO liste (Kullanıcı_ID, Şarkı_ID) VALUES ('"+admamınidX+"','"+ abc+"'  )");
            }

            if (isBizçıkarmayapıcaz()==true){
                Statement sil=connect.createStatement();
                sil.executeUpdate("Delete from liste where Kullanıcı_ID ='"+admamınidX+"' AND Şarkı_ID='"+abc+"' ");
            }



        } catch (SQLException throwables) {
            throwables.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

    }


    public ArrayList<String> getTümkullanıcılarınkullanıcıadı() {
        return tümkullanıcılarınkullanıcıadı;
    }







    public void setTümkullanıcılarınkullanıcıadı(ArrayList<String> tümkullanıcılarınkullanıcıadı) {
        this.tümkullanıcılarınkullanıcıadı = tümkullanıcılarınkullanıcıadı;
    }


    public ArrayList<Integer> getTümkullanıcılarınID() {
        return tümkullanıcılarınID;
    }

    public void setTümkullanıcılarınID(ArrayList<Integer> tümkullanıcılarınID) {
        this.tümkullanıcılarınID = tümkullanıcılarınID;
    }

    public int getKaç_kere_dinlendi() {
        return kaç_kere_dinlendi;
    }

    public void setKaç_kere_dinlendi(int kaç_kere_dinlendi) {
        this.kaç_kere_dinlendi = kaç_kere_dinlendi;
    }







    void createConnection(String k, String ş, String d, String Kayitürü, String email, String ülke, int seçilenşarkı){

        try{
            //Connect to Database
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/şarkı","root","Gogol1221.");

            //Create a sql statement
            Statement query = connect.createStatement();
            Statement query2 = connect.createStatement();
            Statement query3 = connect.createStatement();
            Statement query4 = connect.createStatement();
            Statement query5 = connect.createStatement();
            Statement query6 = connect.createStatement();
            Statement query7 = connect.createStatement();
            Statement query8 = connect.createStatement();
            Statement query9 = connect.createStatement();
            Statement query10 = connect.createStatement();
            Statement query11 = connect.createStatement();
            Statement query12 = connect.createStatement();
            Statement query13 = connect.createStatement();


            Statement query14 = connect.createStatement();
            Statement query15 = connect.createStatement();
            Statement query16 = connect.createStatement();
            Statement query17 = connect.createStatement();
            Statement query18 = connect.createStatement();
            Statement query19 = connect.createStatement();
            Statement query20 = connect.createStatement();

            Statement query21 = connect.createStatement();
            Statement query25 = connect.createStatement();
            Statement query22 = connect.createStatement();
            Statement query23 = connect.createStatement();



            ResultSet tümkullanıcılistesi=query23.executeQuery("Select DISTINCT Kullanıcı_Adı,ID FROM kullanıcı");


            while (tümkullanıcılistesi.next()) {

                int   xxx = tümkullanıcılistesi.getInt("ID");

                if (!tümkullanıcılarınID.contains(xxx)){
                    tümkullanıcılarınID.add(xxx);
                    String xx = tümkullanıcılistesi.getString("Kullanıcı_Adı");
                    tümkullanıcılarınkullanıcıadı.add(xx);}

            }


            ResultSet qwe=query20.executeQuery("SELECT DISTINCT Şarkı_ID ,ID FROM kullanıcı,liste WHERE  liste.Kullanıcı_ID=kullanıcı.ID    AND  Kullanıcı_Adı='"+getResult2()+"' AND Şifre='"+getKopyaşifre()+"'  ");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");


            getGenel_top_10().clear();
            getUlkeye_gore_top_10_liste().clear();
            getPop().clear();
            getCaz().clear();
            getKlasik().clear();
            getTop_10_şarkıcıları().clear();
            getYerel_top_10_şarkıcıları().clear();
            getCaz_şarkıcı().clear();
            getPop_şarkıcı().clear();
            getKlasik_şarkıcı().clear();
            if (seçilenşarkı!=-1){
                ResultSet şarkıtür=query22.executeQuery("SELECT DISTINCT tür  FROM şarkılar WHERE      ID='"+seçilenşarkı+"'  ");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");

                while (şarkıtür.next()) {
                    seçilenşarkınıntürü = şarkıtür.getString("tür");
                }


                ResultSet q=query17.executeQuery("SELECT DISTINCT Şarkı_ID  FROM kullanıcı,liste WHERE  liste.Kullanıcı_ID=kullanıcı.ID    AND  Kullanıcı_Adı='"+getResult2()+"' AND Şifre='"+getKopyaşifre()+"'  ");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");
                ResultSet rs19=query19.executeQuery("SELECT DISTINCT ID FROM kullanıcı WHERE     Kullanıcı_Adı='"+getResult2()+"' AND Şifre='"+getKopyaşifre()+"'  ");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");
                while (rs19.next()) {
                    int xx = rs19.getInt("ID");

                    admamınidX=xx;
                    System.out.println(admamınidX);
                }

                if (c.contains(seçilenşarkı)){
                    c.remove(c.indexOf(seçilenşarkı));
                    query10.executeUpdate("Delete from liste where Şarkı_ID='"+seçilenşarkı +"'");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");
                    ResultSet rs22222 =query25.executeQuery("SELECT DISTINCT Şarkı,Sanatçı FROM şarkılar  WHERE  ID='"+seçilenşarkı+"'");

                    while (rs22222.next()) {

                        String xxx;
                        int xx=0;

                        if (seçilenşarkınıntürü.equals("Caz")) {
                            xxx     = rs22222.getString("şarkı");
                            ADAMINLISTECAZ.remove(ADAMINLISTECAZ.indexOf(xxx));
                            xxx = rs22222.getString("sanatçı");
                            ADAMINLISTECAZSANATÇI.remove(ADAMINLISTECAZSANATÇI.indexOf(xxx));

                        }
                        else if (seçilenşarkınıntürü.equals("Pop")){

                            xxx     = rs22222.getString("şarkı");
                            ADAMINLISTEPOP.remove(ADAMINLISTEPOP.indexOf(xxx));
                            xxx = rs22222.getString("sanatçı");
                            ADAMINLISTEPOPSANATÇI.remove(ADAMINLISTEPOPSANATÇI.indexOf(xxx));


                        }
                        else if (seçilenşarkınıntürü.equals("Klasik")){
                            xxx     = rs22222.getString("şarkı");
                            ADAMINLISTEKLASIK.remove(ADAMINLISTEKLASIK.indexOf(xxx));
                            xxx = rs22222.getString("sanatçı");
                            ADAMINLISTEKLASIKSANATÇI.remove(ADAMINLISTEKLASIKSANATÇI.indexOf(xxx));
                        }


                    }

                }
                else{

                    c.add(seçilenşarkı);


                    //yarım saatir arıyom BURDA ADAMIN LISTESINE SECILEN INDEKSI EKLICEZZ !!!!
                    query10.executeUpdate("INSERT INTO liste(Kullanıcı_ID,Şarkı_ID) VALUES('"+admamınidX+"','"+seçilenşarkı+"')");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");

                    ResultSet rs2222 =query21.executeQuery("SELECT DISTINCT Şarkı,Sanatçı FROM şarkılar  WHERE  ID='"+seçilenşarkı+"'");
                    while (rs2222.next()) {
                        String xxx;
                        xxx = rs2222.getString("şarkı");
                        String xx;
                        xx = rs2222.getString("sanatçı");
                        if (seçilenşarkınıntürü.equals("Caz")) {



                            ADAMINLISTECAZ.add(xxx);
                            ADAMINLISTECAZSANATÇI.add(xx);

                        }
                        else if(seçilenşarkınıntürü.equals("Pop")){

                            ADAMINLISTEPOP.add(xxx);
                            ADAMINLISTEPOPSANATÇI.add(xx);
                        }
                        else if(seçilenşarkınıntürü.equals("Klasik")){

                            ADAMINLISTEKLASIK.add(xxx);
                            ADAMINLISTEKLASIKSANATÇI.add(xx);
                        }



                    }
                }
            }

            if(k!=null&& ş!=null && email!=null && ülke!=null ){
                query10.executeUpdate("INSERT INTO Kullanıcı(Kullanıcı_Adı,email,şifre,abonelik_türü,ülke,durum) VALUES('"+k+"','"+email+"','"+ş+"','"+Kayitürü+"','"+ülke+"','Kullanıcı')");            //Execute a select all statement            ResultSet rs = query.executeQuery("SELECT DISTINCT Albüm FROM şarkılar WHERE Sanatçı='Göksel Kınalı' ");
            }

            ResultSet rs2 =query2.executeQuery("SELECT DISTINCT Kullanıcı_Adı FROM kullanıcı  WHERE Kullanıcı_Adı='"+k+"' AND Şifre='"+ş+"' AND durum='"+d+"'");
            ResultSet rs3 =query3.executeQuery("SELECT DISTINCT abonelik_türü FROM kullanıcı  WHERE Kullanıcı_Adı='"+k+"' AND Şifre='"+ş+"' AND durum='"+d+"'");
            ResultSet rs5 =query5.executeQuery("SELECT DISTINCT ülke FROM  kullanıcı WHERE Kullanıcı_Adı='"+k+"' AND Şifre='"+ş+"' AND durum='"+d+"'");
            ResultSet rs6 =query6.executeQuery("SELECT DISTINCT şarkı,sanatçı FROM şarkılar,sanatçı WHERE Sanatçı=Sanatçı_Adı ORDER BY Dinleme_Sayısı DESC LIMIT 10");
            ResultSet rs7 =query7.executeQuery("SELECT DISTINCT şarkı,sanatçı FROM şarkılar,sanatçı WHERE Sanatçı=Sanatçı_Adı AND Tür='Pop' ORDER BY Dinleme_Sayısı DESC LIMIT 10");
            ResultSet rs8 =query8.executeQuery("SELECT DISTINCT şarkı,sanatçı FROM şarkılar,sanatçı WHERE Sanatçı=Sanatçı_Adı AND Tür='Caz' ORDER BY Dinleme_Sayısı DESC LIMIT 10");
            ResultSet rs9 =query9.executeQuery("SELECT DISTINCT şarkı,sanatçı FROM şarkılar,sanatçı WHERE Sanatçı=Sanatçı_Adı AND Tür='Klasik' ORDER BY Dinleme_Sayısı DESC LIMIT 10");
            ResultSet rs11 =query11.executeQuery("SELECT DISTINCT şarkı,sanatçı,şarkılar.ID  FROM şarkılar,kullanıcı,liste WHERE  liste.Kullanıcı_ID=kullanıcı.ID  AND Tür='Pop' AND liste.Şarkı_ID =şarkılar.ID  AND  Kullanıcı_Adı='"+k+"' AND Şifre='"+ş+"'  ");
            ResultSet rs12 =query12.executeQuery("SELECT DISTINCT şarkı,sanatçı,şarkılar.ID  FROM şarkılar,kullanıcı,liste WHERE  liste.Kullanıcı_ID=kullanıcı.ID  AND Tür='Caz' AND liste.Şarkı_ID =şarkılar.ID  AND  Kullanıcı_Adı='"+k+"' AND Şifre='"+ş+"'  ");
            ResultSet rs13 =query13.executeQuery("SELECT DISTINCT şarkı,sanatçı ,şarkılar.ID  FROM şarkılar,kullanıcı,liste WHERE  liste.Kullanıcı_ID=kullanıcı.ID  AND Tür='Klasik' AND liste.Şarkı_ID =şarkılar.ID  AND  Kullanıcı_Adı='"+k+"' AND Şifre='"+ş+"'  ");

            ResultSet rs14 =query14.executeQuery("SELECT DISTINCT şarkı,sanatçı,ID  FROM şarkılar WHERE  Tür='Klasik'  ");
            ResultSet rs15 =query15.executeQuery("SELECT DISTINCT şarkı,sanatçı,ID  FROM şarkılar WHERE  Tür='Pop'  ");
            ResultSet rs16 =query16.executeQuery("SELECT DISTINCT şarkı,sanatçı,ID  FROM şarkılar WHERE  Tür='Caz'  ");




            while (rs14.next()) {
                int xx = 0;
                String xxx;
                String xxxx;
                xxx     = rs14.getString("şarkı");

                xxxx     = rs14.getString("sanatçı");


                xx=rs14.getInt("ID");
                if (!TümKlasiklerID.contains(xx) ) {
                    TümKlasiklerID.add(xx);
                    TümKlasikler.add(xxx);
                    TümKlasiklerSanatçı.add(xxxx);
                }



            }
            while (rs15.next()) {
                int xx = 0;
                String xxx;
                String xxxx;
                xxx     = rs15.getString("şarkı");

                xxxx     = rs15.getString("sanatçı");


                xx=rs15.getInt("ID");
                if (!TümPoplarID.contains(xx) ) {
                    TümPoplarID.add(xx);
                    TümPoplar.add(xxx);
                    TümPoplarSanatçı.add(xxxx);
                }



            }


            while (rs16.next()) {
                int xx = 0;
                String xxx;
                String xxxx;
                xxx     = rs16.getString("şarkı");

                xxxx     = rs16.getString("sanatçı");


                xx=rs16.getInt("ID");
                if (!TümCazlarID.contains(xx)  ) {
                    TümCazlarID.add(xx);
                    TümCazlar.add(xxx);
                    TümCazlarSanatçı.add(xxxx);
                }


            }








            while (rs11.next()) {
                String adf;
                int id;
                id = rs11.getInt("ID");
                if (!c.contains(id)) {
                    adf = rs11.getString("şarkı");
                    ADAMINLISTEPOP.add(adf);
                    adf = rs11.getString("sanatçı");
                    ADAMINLISTEPOPSANATÇI.add(adf);
                    c.add(id);
                }
            }


            while (rs12.next()){
                String adf;
                int id;
                id=rs12.getInt("ID");
                if (!c.contains(id) ) {
                    adf = rs12.getString("şarkı");
                    ADAMINLISTECAZ.add(adf);
                    adf = rs12.getString("sanatçı");
                    ADAMINLISTECAZSANATÇI.add(adf);
                    c.add(id);


                }
            } while (rs13.next()) {
                String adf;
                int id;
                id = rs13.getInt("ID");
                if (!c.contains(id)) {
                    adf = rs13.getString("şarkı");
                    ADAMINLISTEKLASIK.add(adf);
                    adf = rs13.getString("sanatçı");
                    ADAMINLISTEKLASIKSANATÇI.add(adf);
                    c.add(id);


                }
            }








            while (rs5.next()){
                ulke_bilgisi= rs5.getString("ülke");
            }
            while (rs2.next()){
                result2= rs2.getString("Kullanıcı_Adı");

            }
           /* while (rs.next()){
                result = rs.getString("Albüm");
                System.out.println(result);

            }*/

            ResultSet rs4 =query4.executeQuery("SELECT DISTINCT Şarkı,sanatçı FROM  şarkılar,sanatçı WHERE Sanatçı=Sanatçı_Adı AND ülke='"+ulke_bilgisi+"'ORDER BY Dinleme_Sayısı DESC LIMIT 7 ");

            while (rs2.next()){
                result3= rs2.getString("Şifre");

            }
            while (rs2.next()){
                result3= rs2.getString("Şifre");

            }
            while (rs3.next()){
                result4= rs3.getString("abonelik_türü");

            }


            while (rs4.next()){
                result5= rs4.getString("Şarkı");
                ulkeye_gore_top_10_liste.add(result5);
                result15=rs4.getString("Sanatçı");
                yerel_top_10_şarkıcıları.add(result15);

            }
            while (rs6.next()){
                result6= rs6.getString("Şarkı");
                genel_top_10.add(result6);
                result14=rs6.getString("Sanatçı");
                top_10_şarkıcıları.add(result14);
            }
            while (rs7.next()){
                result7= rs7.getString("Şarkı");
                pop.add(result7);
                result11=rs7.getString("Sanatçı");
                pop_şarkıcı.add(result11);

            }
            while (rs8.next()){
                result8= rs8.getString("Şarkı");
                caz.add(result8);
                result12=rs8.getString("Sanatçı");
                caz_şarkıcı.add(result12);

            }
            while (rs9.next()){
                result9= rs9.getString("Şarkı");
                klasik.add(result9);
                result13=rs9.getString("Sanatçı");
                klasik_şarkıcı.add(result13);

            }




        }

        catch (ClassNotFoundException ex){
            Logger.getLogger(FullDB.class.getName()).log(Level.SEVERE,null,ex);
        }

        catch(SQLException ex){
            Logger.getLogger(FullDB.class.getName()).log(Level.SEVERE,null,ex);
            ex.printStackTrace();
        }
    }

    public String getResult() {
        return result;
    }

    public void setResult(String result) {
        this.result = result;
    }

    public String getResult2() {
        return result2;
    }

    public void setResult2(String result2) {
        this.result2 = result2;
    }

    public String getResult3() {
        return result3;
    }

    public void setResult3(String result3) {
        this.result3 = result3;
    }
    public String getResult4() {
        return result4;
    }

    public void setResult4(String result4) {
        this.result4 = result4;
    }

}

public class Main extends PApplet {
    ControlP5 cp5,a,b,c,d,e,z,listebutonları,listebutonz,cazbutonları,sliderclas,adminseçimbutonları,adminpaneli,müzikdinle;
    boolean adminb;
    boolean kullanicib;
    boolean submit_kontrol;
    boolean adminmi;
    boolean kayitb;
    boolean listeb;
    boolean listea;
    boolean cazseçimi;
    boolean popseçimi;
    boolean klasikseçimi;
    boolean müzikdinliyormu=false;
    String admınkullanıcıeklicekpremiumdurumu;
    ControlP5 textfieldbutonları,textfieldbutonları2,textfieldbutonları3,textfieldbutonları4,textfieldbutonları5;
    int adim_sayisi=0;
    String metin=" ";
    PFont font;
    PFont büyükfont;
    int j=0;
    int hangi_müzigi_dinliyor=-1;
    int abidin=0;
    int teksefer=0;
    int teksefer2=0;
    int abidin2=0;
    int abidin3=0;
    int abidinolsamkeşke=0;
    CheckBox kutu,kutu1;
    String Kullanici_Adi=" ";
    String Sifre=" ";
    String Durum=null;
    String Kayittürü="Normal";
    String ULKE=null;
    String EMAIL=null;
    PImage ekleme,cıkarma,guncelleme,çalma,listeimage;
    Timer Zamanlayıcı=new Timer();




    FullDB connection = new FullDB();
    ArrayList<Integer> cazdaadamınekledikleri= new ArrayList<Integer>( );
    ArrayList<Integer> cazdaadamınçıkardıkları= new ArrayList<Integer>( );
    Integer textfieldsayacı=0,textfieldsayacı2=0,textfieldsayacı3=0,textfieldsayacı4=0,textfieldsayacı5=0;;
    String adminneyieğiştirecek=" ";


    public static void main(String[] args) {
        PApplet.main("com.company.Main", args);



    }
    int listesayacı=0;
    int cazsayacı=0;
    boolean içindevar=false;
    int           adminadımsayısı=2;

    int maxslide=0;
    int slider=0;
    int slidersayaç=0;
    String textfieldtogglegüncel="Normal";
    int adminseçimbutonlarısayacı=0;
    boolean listec=false;
    boolean adamgözetlio=false;
    Integer kiminlistelerigelsin=-1;
    public void setup() {
        ekleme= loadImage("ekleme.png");
        cıkarma=loadImage("cıkarma.png");
        guncelleme=loadImage("guncel.png");
        çalma=loadImage("calma.png");
        popseçimi=false;
        klasikseçimi=false;
        cazseçimi=false;
        adminb=false;
        kullanicib=true;
        kayitb=false;
        listeb=false;
        listea=false;
        submit_kontrol=false;
        adminmi=false;
        font = createFont("arial", 24);
        büyükfont=  createFont("arial",36);

        cp5=new ControlP5(this);
        a=new ControlP5(this);
        b=new ControlP5(this);
        c=new ControlP5(this);
        d=new ControlP5(this);
        e=new ControlP5(this);
        z=new ControlP5(this);
        müzikdinle=new ControlP5(this);
        cazbutonları=new ControlP5(this);
        listebutonları=new ControlP5(this);
        listebutonz=new ControlP5(this);
        sliderclas=new ControlP5(this);
        textfieldbutonları=new ControlP5(this);
        textfieldbutonları2=new ControlP5(this);
        textfieldbutonları3=new ControlP5(this);
        textfieldbutonları4=new ControlP5(this);
        textfieldbutonları5=new ControlP5(this);

        adminseçimbutonları=new ControlP5(this);
        adminpaneli= new ControlP5(this);
        c.addButton("GERI").setPosition(0,815).setSize(100,50).getCaptionLabel().setFont(font);



    }

    public void settings() {
        smooth(4);
        fullScreen();
    }




    public void draw(){
        //GİRİŞ EKRANI

        if(adminb==false && kullanicib==false && kayitb==false){

            background(255,255,255,255);
            fill(0,0,255,255);
            textFont(font);
            textSize(64);
            c.setVisible(false);
            text("Girişinizi Seçiniz",520,300);
            if (abidinolsamkeşke==0) {
                cp5.addButton("ADMIN").setPosition(500, 350).setSize(250, 150).getCaptionLabel().setFont(font);

                a.addButton("KULLANICI").setPosition(770, 350).setSize(250, 150).getCaptionLabel().setFont(font);
                d.addButton("KAYIT").setPosition(635, 520).setSize(250, 150).getCaptionLabel().setFont(font);
                b.setVisible(false);
                abidinolsamkeşke=1;
            }

        }
        //KAYIT EKRANI
        if(kayitb==true && kullanicib==false && adminb==false) {
            adim_sayisi = 1;
            c.setVisible(true);
            if (Kullanici_Adi == " " && Sifre == " ") {
                background(98, 0, 238, 255);
                if (abidin == 0) {
                    z.remove(this);
                    z.addTextfield("EMAIL").setPosition(600, 200).setSize(300, 50).setAutoClear(true).setFont(font).setFont(font).getCaptionLabel().setText("");
                    z.addTextfield("KULLANICI_ADI").setPosition(600, 300).setSize(300, 50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    z.addTextfield("SIFRE").setPosition(600, 400).setSize(300, 50).setAutoClear(true).setFont(font).setFont(font).setPasswordMode(true).getCaptionLabel().setText("");
                    z.addTextfield("ULKE").setPosition(600, 500).setSize(300, 50).setAutoClear(true).setFont(font).setFont(font).getCaptionLabel().setText("");
                    z.addBang("KAYITOL").setPosition(600, 700).setSize(300, 50).getCaptionLabel().setText("");
                    z.addToggle("PREMIUM").setPosition(700,600).setSize(100,50).getCaptionLabel().setText("");


                    abidin = 1;
                }
                textFont(font);
                textSize(64);
                fill(255, 0, 0, 255);
                text("KAYIT ALANI", 560, 100);
                cp5.remove("ADMIN");
                a.remove("KULLANICI");
                d.remove("KAYIT");
                b.setVisible(true); //BUTONLARI GOSTERME ISLEMI
                textSize(20);
                fill(255, 0, 0, 255);
                text("EMAIL", 600, 190);
                text("KULLANICI ADI", 600, 290);
                text("SIFRE", 600, 390);
                text("ULKE", 600, 490);
                text("KAYIT OL", 600, 690);
                text("PREMİUM", 700, 590);
            }

        }
        //BILGILER GIRILMEDEN EVVELKI ADMIN PANELI
        if(adminb==true && kullanicib==false  &&submit_kontrol==false){
            adim_sayisi=1;
            adminmi=true;
            c.setVisible(true);
            if(Kullanici_Adi==" " && Sifre==" "){
                background(255,209,102,255);
                if(abidin==0){
                    b.addTextfield("KULLANICI_ADI").setPosition(600,400).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    b.addTextfield("SIFRE").setPosition(600,500).setSize(300,50).setAutoClear(true).setFont(font).setFont(font).setPasswordMode(true).getCaptionLabel().setText("");
                    b.addBang("Submit").setPosition(600,600).setSize(300,50).getCaptionLabel().setText("");
                    abidin=1;
                }
                textFont(font);
                textSize(64);
                fill(0,0,255,255);
                text("ADMİN PANELİ",520,100);
                cp5.remove("ADMIN");
                a.remove("KULLANICI");
                d.remove("KAYIT");
                b.setVisible(true);
                textSize(20);
                fill(255,0,0,255);
                text("KULLANICI ADI",600,380);
                text("SIFRE",600,480);
                text("GIRIS",600,580);
                Durum="Admin";

            }
            //BILGILER YANLIS GIRLIRSE ADMIN PANELI
            else if(connection.getResult2()==null){
                connection.getGenel_top_10().clear();
                connection.getUlkeye_gore_top_10_liste().clear();
                connection.getPop().clear();
                connection.getCaz().clear();
                connection.getKlasik().clear();
                connection.getTop_10_şarkıcıları().clear();
                connection.getYerel_top_10_şarkıcıları().clear();
                connection.getCaz_şarkıcı().clear();
                connection.getPop_şarkıcı().clear();
                connection.getKlasik_şarkıcı().clear();
                c.setVisible(true);
                background(255,209,102,255);
                textFont(font);
                textSize(64);
                fill(0,0,255,255);
                text("ADMİN PANELİ",520,100);
                cp5.remove("ADMIN");
                a.remove("KULLANICI");
                d.remove("KAYIT");
                if(abidin==0){
                    b.remove(this);
                    b.addTextfield("KULLANICI_ADI").setPosition(600,400).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    b.addTextfield("SIFRE").setPosition(600,500).setSize(300,50).setAutoClear(true).setFont(font).setFont(font).setPasswordMode(true).getCaptionLabel().setText("");
                    b.addBang("Submit").setPosition(600,600).setSize(300,50).getCaptionLabel().setText("");
                    abidin=1;
                }

                textSize(20);
                fill(255,0,0,255);
                text("KULLANICI ADI",600,380);
                text("SIFRE",600,480);
                text("GIRIS",600,580);
                textSize(25);
                text("YANLIS SIFRE YA DA KULLANICI ADI",600,700);


            }

        }
        //BILGILER GIRILMEDEN EVVEL KULLANICI PANELI
        if(kullanicib==true && adminb==false &&submit_kontrol==false){
            adim_sayisi=1;
            c.setVisible(true);
            if(Kullanici_Adi==" " && Sifre==" "){
                background(6,214,160,255);
                if(abidin==0){
                    b.remove(this);
                    b.addTextfield("KULLANICI_ADI").setPosition(600,400).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    b.addTextfield("SIFRE").setPosition(600,500).setSize(300,50).setAutoClear(true).setFont(font).setFont(font).setPasswordMode(true).getCaptionLabel().setText("");
                    b.addBang("Submit").setPosition(600,600).setSize(300,50).getCaptionLabel().setText("");
                    abidin=1;
                }

                textFont(font);
                textSize(64);
                fill(0,0,255,255);
                text("KULLANICI PANELİ",470,100);
                cp5.remove("ADMIN");
                a.remove("KULLANICI");
                d.remove("KAYIT");
                b.setVisible(true); //BUTONLARI GOSTERME ISLEMI
                textSize(20);
                fill(255,0,0,255);
                text("KULLANICI ADI",600,380);
                text("SIFRE",600,480);
                text("GIRIS",600,580);
                Durum="Kullanıcı";
            }
            //BILGILERIN YANLIS GIRILDIGI KULLANICI PANELI
            else if(connection.getResult2()==null){
                connection.getGenel_top_10().clear();
                connection.getUlkeye_gore_top_10_liste().clear();
                connection.getPop().clear();
                connection.getCaz().clear();
                connection.getKlasik().clear();
                connection.getTop_10_şarkıcıları().clear();
                connection.getYerel_top_10_şarkıcıları().clear();
                connection.getCaz_şarkıcı().clear();
                connection.getPop_şarkıcı().clear();
                connection.getKlasik_şarkıcı().clear();
                c.setVisible(true);
                background(6,214,160,255);
                textFont(font);
                textSize(64);
                fill(0,0,255,255);
                text("KULLANICI PANELİ",470,100);
                cp5.remove("ADMIN");
                a.remove("KULLANICI");
                d.remove("KAYIT");

                if(abidin==0){
                    b.remove(this);
                    b.addTextfield("KULLANICI_ADI").setPosition(600,400).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    b.addTextfield("SIFRE").setPosition(600,500).setSize(300,50).setAutoClear(true).setFont(font).setFont(font).setPasswordMode(true).getCaptionLabel().setText("");
                    b.addBang("Submit").setPosition(600,600).setSize(300,50).getCaptionLabel().setText("");
                    abidin=1;
                }
                textSize(20);
                fill(255,0,0,255);
                text("KULLANICI ADI",600,380);
                text("SIFRE",600,480);
                text("GIRIS",600,580);
                textSize(25);
                fill(255,0,0,255);
                text("YANLIS SIFRE YA DA KULLANICI ADI",600,700);


            }
        }
        //ADMINE HOSEGLEDİN
        if(submit_kontrol==true && adminmi==true ){
            adim_sayisi=2;
            adminadımsayısı=2;
            c.setVisible(true);
            background(255,255,255,255);
            textFont(font);
            textSize(30);
            text("HOSGELDIN "+connection.getResult2(),600,100);

            if (abidin3==0) {
                adminpaneli.addButton("KullanıcıIslemleri").setPosition(width/2 -200, 200).setSize(380, 50).getCaptionLabel().setFont(font).setText("Kullanıcı Islemleri");
                adminpaneli.addButton("SARKIISLEMLERI").setPosition(width/2 -200, 300).setSize(380, 50).getCaptionLabel().setFont(font).setText("Şarkı İşlemleri");
                adminpaneli.addButton( "CALMALISTEISLEMLERI").setPosition(width/2 -200, 400).setSize(380, 50).getCaptionLabel().setFont(font).setText("Çalma Listesi İşlemleri");
                adminpaneli.addButton("ALBUMISLEMLERI").setPosition(width/2 -200, 500).setSize(380, 50).getCaptionLabel().setFont(font).setText("Albüm İşlemleri");
                adminpaneli.addButton( "SANATCIISLEMLERI").setPosition(width/2 -200, 600).setSize(380, 50).getCaptionLabel().setFont(font).setText("Sanatçı İşlemleri");

                abidin3=1;
            }
            else
                adminpaneli.setVisible(true);



            if (adminneyieğiştirecek.equals("Kullanıcı")){
                adminadımsayısı=3;
                adim_sayisi=3;

                adminpaneli.setVisible(false);
                background(255);


                fill(0,255,0);
                rect(550,50,900,700,30,30,30,30);

                fill(0,0,255);

                rect(50,50,400,700,30,30,30,30);

                fill(0,125,125);
                rect(1000,75,400,650,30,30,30,30);





                fill(255,0,0);





                text("Kullanıcı Ekle",100,100);
                text("Kullanıcı Güncelle",600,100);
                text("Kullanıcı Sil",1100,120);

                text("Email",100,140);
                text("Kullanıcı Adı",100,240);
                text("Şifre",100,340);
                text("Ülke",100,440);
                text("Premium",100,540);

                text("Email",600,140);
                text("Kullanıcı Adı",600,240);
                text("Şifre",600,340);
                text("Ülke",600,440);
                text("Premium",600,540);

                if (textfieldsayacı==0) {

                    textfieldbutonları.addTextfield("kullanıcıekleemail").setPosition(100,150).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addTextfield("kullanıcıeklekullanıcı_adı").setPosition(100,250).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addTextfield("kullanıcıekleşifre").setPosition(100,350).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addTextfield("kullanıcıekleülke").setPosition(100,450).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addToggle("kullanıeklepremium").setPosition(220,550).setSize(50,50);
                    textfieldbutonları.addButton( "kullanıcıeklesubmit").setPosition(100, 650).setSize(300, 50).getCaptionLabel().setFont(font).setText("KullanıcıEkle");





                    textfieldbutonları.addTextfield("kullanıcıguncelleemail").setPosition(600,150).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addTextfield("kullanıcıguncellekullanıcı_adı").setPosition(600,250).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addTextfield("kullanıcıguncelleşifre").setPosition(600,350).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addTextfield("kullanıcıguncelleülke").setPosition(600,450).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları.addToggle("kullanıguncellepremium").setPosition(650,550).setSize(50,50);

                    textfieldsayacı=1;
                }

                for (int i=0;i<connection.getTümkullanıcılarınkullanıcıadı().size();i++){
                    text( connection.getTümkullanıcılarınkullanıcıadı().get(i),1100, 180+40*i);
                    image(guncelleme,1050,150+40*i,40,40);
                    image(cıkarma,1000,150+40*i,40,40);

                }








            }


            if (adminneyieğiştirecek.equals("Şarkı")) {
                adminadımsayısı=3;
                adim_sayisi=3;

                adminpaneli.setVisible(false);
                background(255);


                fill(0,255,0);
                rect(550,50,900,800,30,30,30,30);

                fill(0,0,255);

                rect(50,50,400,800,30,30,30,30);

                fill(0,125,125);
                rect(1000,75,400,750,30,30,30,30);





                fill(255,0,0);





                text("Şarkı Ekle",100,100);
                text("Şarkı Güncelle",600,100);
                text("Şarkı Sil",1100,120);

                text("Şarkı Adı",100,140);
                text("Sanatçı Adı",100,240);
                text("Tarih",100,340);
                text("Tür",100,440);
                text("Albüm",100,540);
                text("Süre",100,640);


                text("Şarkı",600,140);
                text("Sanatçı Adı",600,240);
                text("Tarih",600,340);
                text("Tür",600,440);
                text("Albüm",600,540);
                text("Süre",600,640);
                text("Dinlenme Sayısı",600,740);




                if (textfieldsayacı2==0) {

                    textfieldbutonları2.addTextfield("adminşarkıdaisimekle").setPosition(100,150).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminşarkıdasanatçıeklee").setPosition(100,250).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminsarkıdatarihekle").setPosition(100,350).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminsarkıdatürekle").setPosition(100,450).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminsarkıdaalbümekle").setPosition(100,550).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminsarkıdasüreekle").setPosition(100,650).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);

                    textfieldbutonları2.addButton( "adminşarkıekledesubmit").setPosition(100, 750).setSize(300, 50).getCaptionLabel().setFont(font).setText("Şarkı Ekle");





                    textfieldbutonları2.addTextfield("adminşarkıdaisimgüncelle").setPosition(600,150).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminşarkıdasanatçıgüncelle").setPosition(600,250).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminsarkıdatarihgüncelle").setPosition(600,350).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminsarkıdatürgüncelle").setPosition(600,450).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addTextfield("adminsarkıdaalbümgüncelle").setPosition(600,550).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);;
                    textfieldbutonları2.addTextfield("adminsarkıdasüregüncelle").setPosition(600,650).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);;
                    textfieldbutonları2.addTextfield("adminsarkıdadinlenmesayısıgüncelle").setPosition(600,750).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);;


                    connection.createConnection();









                    textfieldsayacı2=1;
                }
                //ŞARKILARDAKİ SANATÇILARIN LİSTESİ
                for (int i=0;i<connection.getTUMSANATCILAR().size();i++){
                    textSize(15);
                    fill(0,0,255,255);
                    text(connection.getTUMSARKILAR().get(i),1080,165+20*i);
                    textSize(15);
                    fill(255,0,0,255);
                    text( connection.getTUMSANATCILAR().get(i),1270, 165+20*i);
                    image(guncelleme,1050,150+20*i,20,20);
                    image(cıkarma,1000,150+20*i,20,20);

                }



            }

            if (adminneyieğiştirecek.equals("Sanatçı")) {
                adminadımsayısı = 3;
                adim_sayisi = 3;

                adminpaneli.setVisible(false);
                background(255);


                fill(0, 255, 0);
                rect(550, 50, 900, 800, 30, 30, 30, 30);

                fill(0, 0, 255);

                rect(50, 50, 400, 800, 30, 30, 30, 30);

                fill(0, 125, 125);
                rect(1000, 75, 400, 750, 30, 30, 30, 30);


                fill(255, 0, 0);


                text("Sanatçı Ekle", 100, 100);
                text("Sanatçı Güncelle", 600, 100);
                text("Sanatçı Sil", 1100, 120);

                text("Sanatçı Adı", 100, 140);
                text("Ülke", 100, 240);



                text("Sanatçı Adı", 600, 140);
                text("Ülke Adı", 600, 240);



                if (textfieldsayacı3==0) {

                    textfieldbutonları3.addTextfield("adminsanatçıdaisimekle").setPosition(100,150).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları3.addTextfield("adminsanatçıdaülkeeklee").setPosition(100,250).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları2.addButton( "adminsanatçıekledesubmit").setPosition(100, 750).setSize(300, 50).getCaptionLabel().setFont(font).setText("Şarkı Ekle");


                    textfieldbutonları3.addTextfield("adminşarkıdaisimgüncelle").setPosition(600,150).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    textfieldbutonları3.addTextfield("adminşarkıdasanatçıgüncelle").setPosition(600,250).setSize(300,50).setAutoClear(true).setFont(font).getCaptionLabel().setText("").setFont(font).setColor(120);
                    connection.createConnection();
                    textfieldsayacı3=1;
                }



                for (int i=0;i<connection.getTUMSANATCILAR().size();i++){
                    text( connection.getTUMSANATCILAR().get(i),1100, 180+40*i);
                    image(guncelleme,1050,150+40*i,40,40);
                    image(cıkarma,1000,150+40*i,40,40);

                }


            }






        }
        //KULLANICIYA HOSGELDİN
        else if(submit_kontrol==true && adminmi==false ){
            adim_sayisi=2;
            c.setVisible(true);
            background(255,255,255,255);

            textFont(font);
            textSize(30);
            fill(0,0,255,255);
            text(connection.getResult4(),0,50);
            fill(0,0,255,255);
            text("HOSGELDIN "+connection.getResult2(),600,100);

            fill(255,255,0,255);
            rect(75,140,285,260,45,45,45,45);
            fill(0,0,0,255);
            textSize(20);
            text("YERLİ TOP 10 ŞARKI ",85,170);

            fill(255,0,0,255);
            textSize(15);
            for (int i = 0; i < connection.getUlkeye_gore_top_10_liste().size(); i++) {
                text((i+1)+"."+connection.getUlkeye_gore_top_10_liste().get(i),85,200+(20*i));


            }
            fill(0,0,255,255);
            textSize(15);
            for (int i = 0; i < connection.getYerel_top_10_şarkıcıları().size(); i++) {
                text(connection.getYerel_top_10_şarkıcıları().get(i),245,200+(20*i));

            }
            fill(255,255,0,255);
            rect(370,140,280,260,45,45,45,45);
            textSize(20);
            fill(0,0,0,255);
            text("TOP 10 ŞARKI ",420,170);

            fill(255,0,0,255);
            textSize(15);
            for (int i = 0; i < connection.getGenel_top_10().size(); i++) {
                text((i+1)+"."+connection.getGenel_top_10().get(i),390,200+(20*i));

            }
            fill(0,0,255,255);
            textSize(15);
            for (int i = 0; i < connection.getTop_10_şarkıcıları().size(); i++) {
                text(connection.getTop_10_şarkıcıları().get(i),540,200+(20*i));

            }
            fill(255,255,0,255);
            rect(660,140,280,260,45,45,45,45);
            textSize(20);
            fill(0,0,0,255);
            text("TOP 10 POP ŞARKI ",680,170);

            fill(255,0,0,255);
            textSize(15);
            for (int i = 0; i < connection.getPop().size(); i++) {
                text((i+1)+"."+connection.getPop().get(i),670,200+(20*i));

            }
            fill(0,0,255,255);
            textSize(15);
            for (int i = 0; i < connection.getCaz_şarkıcı().size(); i++) {
                text(connection.getPop_şarkıcı().get(i),820,200+(20*i));
            }
            fill(255,255,0,255);
            rect(950,140,280,260,45,45,45,45);
            textSize(20);
            fill(0,0,0,255);
            text("TOP 10 CAZ ŞARKI ",970,170);

            fill(255,0,0,255);
            textSize(15);
            for (int i = 0; i < connection.getCaz().size(); i++) {
                text((i+1)+"."+connection.getCaz().get(i),960,200+(20*i));

            }
            fill(0,0,255,255);
            textSize(15);
            for (int i = 0; i < connection.getCaz_şarkıcı().size(); i++) {
                text(connection.getCaz_şarkıcı().get(i),1080,200+(20*i));

            }
            fill(255,255,0,255);
            rect(1240,140,280,260,45,45,45,45);
            textSize(20);
            fill(0,0,0,255);
            text("TOP 10 KLASİK ŞARKI ",1270,170);

            fill(255,0,0,255);
            textSize(15);
            for (int i = 0; i < connection.getKlasik().size(); i++) {
                text((i+1)+"."+connection.getKlasik().get(i),1250,200+(20*i));

            }
            fill(0,0,255,255);
            textSize(15);
            for (int i = 0; i < connection.getKlasik_şarkıcı().size(); i++) {
                text(connection.getKlasik_şarkıcı().get(i),1400,200+(20*i));

            }


            text("Çalma Listelerim",720,450);
            text("Diğer Kullanıcıları Görüntüle",700,680);

            if (teksefer==0) {
                listebutonları.addButton("liste").setPosition(700, 480).setSize(150, 60).getCaptionLabel().setText("Listelerim");
                teksefer = 1;
                listebutonları.addButton("kullanıcıgörüntüle").setPosition(700,700).setSize(150,60);


            }
            text("Şarkı Dinle",740,570);
            if(teksefer2==0){
                müzikdinle.addButton("Şarkı_Dinle").setPosition(700, 590).setSize(150, 60).getCaptionLabel().setText("Sarkı Dinle");
                teksefer2=1;
            }
//listea butonuna basılırsa


            if (listec==true){
                adim_sayisi = 3;
                background(255,209,102,255);

                textSize(45);
                text("Takip Edebileceğin Kullanıcılar",600,50);

                müzikdinle.getController("Şarkı_Dinle").setVisible(false);
                listebutonları.getController("liste").setVisible(false);
                listebutonları.getController("kullanıcıgörüntüle").setVisible(false);

                textSize(30);
                connection.createConnection();
                for (int i=0;i<connection.getTÜMTAKİPEDİLEBİLECEKLER().size();i++) {
                    fill(239,71,111);
                    text(connection.getTÜMTAKİPEDİLEBİLECEKLER().get(i),600,150+30*i);

                    image(guncelleme,510,120+30*i,30,30);

                    if (!connection.getKULLANICININTAKIPETTIKLERIID().contains(  connection.getTÜMTAKİPEDİLEBİLECEKLERID().get(i)  )){

                        image(ekleme,550,120+30*i,30,30);

                    }else
                        image(cıkarma,550,120+30*i,30,30);



                }







                if (adamgözetlio==true){
                    connection.createConnection();
                    background(255);
                    textSize(40);
                    text("İstediğiniz Kullanıcının Çalma Listeleri",450,50);
                    textSize(20);

                    connection.setArkadaşınidsi(kiminlistelerigelsin);
                    text("CAZ Çalma Listesi",200,100);

                    text("KLASİK Çalma Listesi",600,100);
                    text("POP Çalma Listesi",1200,100);

//CAZ
                    for (int i=0;i<connection.getARKADAŞINCAZ().size();i++) {
                        fill(239,71,111);
                        text(connection.getARKADAŞINCAZ().get(i),200,140+30*i);
                        fill(7,59,76);
                        text(connection.getARKADAŞINCAZSANATCI().get(i),360,140+30*i);


                        if (connection.getBizimCazID().contains(connection.getARKADAŞINCAZID().get(i))){
                            image(cıkarma,160,120+30*i,30,30);
                        }
                        else
                            image(ekleme,160,120+30*i,30,30);


                    }
///pop
                    for (int i=0;i<connection.getARKADAŞINPOPID().size();i++) {
                        fill(239,71,111);
                        text(connection.getARKADAŞINPOP().get(i),1170,140+30*i);
                        fill(7,59,76);
                        text(connection.getARKADAŞINPOPSANATCI().get(i),1350,140+30*i);


                        if (connection.getBizimPopID().contains(connection.getARKADAŞINPOPID().get(i))){
                            image(cıkarma,1140,120+30*i,30,30);
                        }
                        else
                            image(ekleme,1140,120+30*i,30,30);


                    }

                    //KLASIK
                    for (int i=0;i<connection.getARKADAŞINKLASIK().size();i++) {
                        fill(239,71,111);
                        text(connection.getARKADAŞINKLASIK().get(i),600,140+30*i);
                        fill(7,59,76);
                        text(connection.getARKADAŞINKLASIKSANATCI().get(i),780,140+30*i);


                        if (connection.getBizimKlasikID().contains(connection.getARKADAŞINKLASIKID().get(i))){
                            image(cıkarma,560,120+30*i,30,30);
                        }
                        else
                            image(ekleme,560,120+30*i,30,30);


                    }


                }




            }



            if (listea==true) {
                adim_sayisi = 3;
                background(255,209,102,255);
                müzikdinle.getController("Şarkı_Dinle").setVisible(false);
                listebutonları.getController("liste").setVisible(false);
                listebutonları.getController("kullanıcıgörüntüle").setVisible(false);


                textSize(20);
                connection.createConnection();
                for (int i = 0; i <connection.getTUMSARKILAR().size(); i++) {
                    if(i<27) {


                        if(hangi_müzigi_dinliyor==i){
                            connection.setDinlenen_şarkı(hangi_müzigi_dinliyor);
                            connection.createConnection();
                            image(cıkarma, 105, 35 + hangi_müzigi_dinliyor * 30, 20, 20);
                            hangi_müzigi_dinliyor=-1;


                        }


                        else
                            image(çalma,105,35+30*i,20,20);

                        connection.createConnection();
                        fill(0, 0, 255, 255);
                        text(connection.getTUMSARKILAR().get(i), 130, 50 + 30 * i);
                        fill(255, 0, 0, 255);
                        text(connection.getTUMSANATCILAR().get(i), 310, 50 + 30 * i);


                    }

                    else if(i>26 && i<54){


                        if(hangi_müzigi_dinliyor==i){
                            connection.setDinlenen_şarkı(hangi_müzigi_dinliyor);
                            connection.createConnection();
                            image(cıkarma, 500, 35 + hangi_müzigi_dinliyor * 30-810, 20, 20);
                            hangi_müzigi_dinliyor=-1;
                        }
                        else
                            image(çalma,500,35+30*i-810,20,20);

                        fill(0, 0, 255, 255);
                        text(connection.getTUMSARKILAR().get(i), 525, 50 + 30 * i-810);
                        fill(255, 0, 0, 255);
                        text(connection.getTUMSANATCILAR().get(i), 695, 50 + 30 * i-810);


                    }
                    else{


                        if(hangi_müzigi_dinliyor==i){
                            connection.setDinlenen_şarkı(hangi_müzigi_dinliyor);
                            connection.createConnection();
                            image(cıkarma, 870, 35 + hangi_müzigi_dinliyor * 30-1620, 20, 20);

                            hangi_müzigi_dinliyor=-1;
                        }
                        else
                            image(çalma,870,35+30*i-1620,20,20);

                        fill(0, 0, 255, 255);
                        text(connection.getTUMSARKILAR().get(i), 895, 50 + 30 * i-1620);
                        fill(255, 0, 0, 255);
                        text(connection.getTUMSANATCILAR().get(i), 1050, 50 + 30 * i-1620);



                    }
                }

            }
//liste butonuna basılırrsa

            if (listeb==true){
                listec=false;
                adim_sayisi=3;
                background(255);
                listebutonları.remove(this);
                müzikdinle.remove(this);
                text("CAZ Çalma Listesi",200,100);

                text("KLASİK Çalma Listesi",700,100);
                text("POP Çalma Listesi",1200,100);

                //POP
                for (int i=0;i<connection.getADAMINLISTEPOP().size();i++) {
                    fill(239,71,111);
                    text(connection.getADAMINLISTEPOP().get(i),1170,150+20*i);
                    fill(7,59,76);
                    text(connection.getADAMINLISTEPOPSANATÇI().get(i),1350,150+20*i);
                }
//CAZ
                for (int i=0;i<connection.getADAMINLISTECAZ().size();i++) {
                    fill(239,71,111);
                    text(connection.getADAMINLISTECAZ().get(i),150,150+20*i);
                    fill(7,59,76);
                    text(connection.getADAMINLISTECAZSANATÇI().get(i),330,150+20*i);
                }

                //KLASIK
                for (int i=0;i<connection.getADAMINLISTEKLASIK().size();i++) {
                    fill(239,71,111);
                    text(connection.getADAMINLISTEKLASIK().get(i),650,150+20*i);
                    fill(7,59,76);
                    text(connection.getADAMINLISTEKLASIKSANATÇI().get(i),830,150+20*i);
                }
                if (listesayacı==0) {
                    listebutonz.remove(this);
                    listebutonz.setVisible(true);
                    listebutonz.addButton("cazgüncelleme").setPosition(205, 700).setSize(100, 50).getCaptionLabel().set("EKLE/CIKAR");


                    listebutonz.addButton("popgüncelleme").setPosition(1200, 700).setSize(100, 50).getCaptionLabel().set("EKLE/CIKAR");


                    listebutonz.addButton("klasikgüncelleme").setPosition(715, 700).setSize(100, 50).getCaptionLabel().set("EKLE/CIKAR");

                    listesayacı=1;
                }


                if (klasikseçimi==true){
                    textFont(büyükfont,30);
                    maxslide=(connection.getTümKlasikler().size()-13)*50;
                    if (maxslide<0)
                        maxslide=0;
                    adim_sayisi=4;
                    background(255);

                    //520 70


                    text(mouseX,800,800);
                    text(mouseY,820,850);



                    if (slidersayaç==0) {
                        sliderclas.addSlider("slider").setPosition(1500, 0).setSize(50, 863).setRange(0, maxslide).linebreak();
                        sliderclas.addButton("cazgüncel").setPosition(60,400).setSize(200,50).getCaptionLabel().setText("Listemi Güncelle");
                        slidersayaç=1;
                    }


                    for (int i=0;i<connection.getTümKlasikler().size();i++)
                    {



                        if( connection.getC() .contains( connection.getTümKlasiklerID().get(i)))
                            içindevar=true;

                        if (i%2==0)
                            fill(239, 71, 111);
                        else
                            fill(255,209  ,102  );
                        rect(450,70+50*i-slider ,700,40,25,25,25,25);



                        if (i%2==0)

                            fill(7, 59, 76);
                        if (i%2==1)
                            fill(17,138,178);






                        text(connection.getTümKlasikler().get(i), 600 ,  100 + 50 * i - slider);


                        text(connection.getTümKlasiklerSanatçı().get(i), 900 ,  100 + 50 * i-slider);

                        if (içindevar==false)
                            image(ekleme,530,75+50*i -slider,30,30);
                        else
                            image(cıkarma,530,75+50*i -slider,30,30);






                        içindevar=false;
                    }








                }








                if (cazseçimi==true){
                    textFont(büyükfont,30);
                    maxslide=(connection.getTümCazlar().size()-13)*50;
                    if (maxslide<0)
                        maxslide=0;
                    adim_sayisi=4;
                    background(255);

                    //520 70


                    text(mouseX,800,800);
                    text(mouseY,820,850);



                    if (slidersayaç==0) {
                        sliderclas.addSlider("slider").setPosition(1500, 0).setSize(50, 863).setRange(0, maxslide).linebreak();
                        sliderclas.addButton("cazgüncel").setPosition(60,400).setSize(200,50).getCaptionLabel().setText("Listemi Güncelle");
                        slidersayaç=1;
                    }


                    for (int i=0;i<connection.getTümCazlar().size();i++)
                    {



                        if( connection.getC() .contains( connection.getTümCazlarID().get(i)))
                            içindevar=true;

                        if (i%2==0)
                            fill(239, 71, 111);
                        else
                            fill(255,209  ,102  );
                        rect(450,70+50*i-slider ,700,40,25,25,25,25);



                        if (i%2==0)

                            fill(7, 59, 76);
                        if (i%2==1)
                            fill(17,138,178);






                        text(connection.getTümCazlar().get(i), 600 ,  100 + 50 * i - slider);


                        text(connection.getTümCazlarSanatçı().get(i), 900 ,  100 + 50 * i-slider);

                        if (içindevar==false)
                            image(ekleme,530,75+50*i -slider,30,30);
                        else
                            image(cıkarma,530,75+50*i -slider,30,30);






                        içindevar=false;
                    }








                }












                if (popseçimi==true){
                    adim_sayisi=4;
                    background(255);
                    text("POP SARKILAR",200,200);


                    textFont(büyükfont,30);
                    maxslide=(connection.getTümPoplar().size()-13)*50;
                    if (maxslide<0)
                        maxslide=0;
                    adim_sayisi=4;
                    background(255);

                    //520 70


                    text(mouseX,800,800);
                    text(mouseY,820,850);



                    if (slidersayaç==0) {
                        sliderclas.addSlider("slider").setPosition(1500, 0).setSize(50, 863).setRange(0, maxslide).linebreak();
                        sliderclas.addButton("cazgüncel").setPosition(60,400).setSize(200,50).getCaptionLabel().setText("Listemi Güncelle");
                        slidersayaç=1;
                    }


                    for (int i=0;i<connection.getTümPoplar().size();i++)
                    {



                        if( connection.getC() .contains( connection.getTümPoplarID().get(i)))
                            içindevar=true;

                        if (i%2==0)
                            fill(239, 71, 111);
                        else
                            fill(255,209  ,102  );
                        rect(450,70+50*i-slider ,700,40,25,25,25,25);



                        if (i%2==0)

                            fill(7, 59, 76);
                        if (i%2==1)
                            fill(17,138,178);






                        text(connection.getTümPoplar().get(i), 600 ,  100 + 50 * i - slider);


                        text(connection.getTümPoplarSanatçı().get(i), 900 ,  100 + 50 * i-slider);

                        if (içindevar==false)
                            image(ekleme,530,75+50*i -slider,30,30);
                        else
                            image(cıkarma,530,75+50*i -slider,30,30);






                        içindevar=false;
                    }

















                }





            }




        }


        text(mouseX,50,50);
        text(mouseY,50,60);

    }

    public void kullanıcıgörüntüle(){
        listec=true;
    }


    public void mousePressed() {
        int abdul = 0;
        connection.createConnection();

        if (listec==true && adamgözetlio==true){

            for (int i=0;i<connection.getARKADAŞINCAZ().size()-abdul;i++){

                if (mouseX>160 && mouseX<190 && mouseY>120+30*i  && mouseY<150+30*i){
                    int id=connection.getARKADAŞINCAZID().get(i);


                    if(connection.getBizimCazID().contains(id)){


                        System.out.println("çıkar");

                        connection.setAbc(id);
                        connection.setBizçıkarmayapıcaz(true);
                        connection.createConnection();
                        connection.setBizçıkarmayapıcaz(false);
                        connection.getBizimCazID().remove(i);
                        connection.getBizimCaz().remove(i);
                        connection.getBizimCazSanatçı().remove(i);
                        abdul++;
                    }
                    else {
                        System.out.println("ekle");
                        int kaçıncıeleman=connection.getTümCazlarID().indexOf(id);
                        connection.getBizimCaz().add(connection.getTümCazlar().get(kaçıncıeleman));
                        connection.getBizimCazSanatçı().add(connection.getTümCazlarSanatçı().get(kaçıncıeleman));
                        connection.getBizimCazID().add(id);

                        connection.setAbc(id);
                        connection.setBizeklemeyapıcaz(true);
                        connection.createConnection();
                        connection.setBizeklemeyapıcaz(false);

                    }
                }

            }

            abdul=0;

            for (int i=0;i<connection.getARKADAŞINPOP().size()-abdul;i++){

                if (mouseX>1140 && mouseX<1170 && mouseY>120+30*i  && mouseY<150+30*i){
                    int id=connection.getARKADAŞINPOPID().get(i);


                    if(connection.getBizimPopID().contains(id)){
                        System.out.println("çıkar");
                        connection.createConnection();

                        connection.setAbc(id);
                        connection.setBizçıkarmayapıcaz(true);
                        connection.createConnection();
                        connection.setBizçıkarmayapıcaz(false);
                        connection.getBizimPopID().remove(i);
                        connection.getBizimPop().remove(i);
                        connection.getBizimPopSanatçı().remove(i);

                    }
                    else {
                        System.out.println("ekle");
                        int kaçıncıeleman=connection.getTümPoplarID().indexOf(id);
                        connection.getBizimPop().add(connection.getTümPoplar().get(kaçıncıeleman));
                        connection.getBizimPopSanatçı().add(connection.getTümPoplarSanatçı().get(kaçıncıeleman));

                        connection.setAbc(id);
                        connection.setBizeklemeyapıcaz(true);
                        connection.createConnection();
                        connection.setBizeklemeyapıcaz(false);
                        connection.getBizimPopID().add(id);
                        abdul++;
                    }
                }

            }



            abdul=0;

            for (int i=0;i<connection.getARKADAŞINKLASIK().size()-abdul;i++){

                if (mouseX>560 && mouseX<590 && mouseY>120+30*i  && mouseY<150+30*i){
                    int id=connection.getARKADAŞINKLASIKID().get(i);


                    if(connection.getBizimKlasikID().contains(id)){
                        System.out.println("çıkar");
                        connection.createConnection();

                        connection.setAbc(id);
                        connection.setBizçıkarmayapıcaz(true);
                        connection.createConnection();
                        connection.setBizçıkarmayapıcaz(false);
                        connection.getBizimKlasikID().remove(i);
                        connection.getBizimKlasik().remove(i);
                        connection.getBizimKlasikSanatçı().remove(i);
                        abdul++;
                    }
                    else {
                        System.out.println("ekle");
                        int kaçıncıeleman=connection.getTümKlasiklerID().indexOf(id);
                        connection.getBizimKlasik().add(connection.getTümKlasikler().get(kaçıncıeleman));
                        connection.getBizimKlasikSanatçı().add(connection.getTümKlasiklerSanatçı().get(kaçıncıeleman));

                        connection.setAbc(id);
                        connection.setBizeklemeyapıcaz(true);
                        connection.createConnection();
                        connection.setBizeklemeyapıcaz(false);
                        connection.getBizimKlasikID().add(id);

                    }
                }

            }



        }






        if (listec == true) {


            for (int i = 0; i < connection.getTÜMTAKİPEDİLEBİLECEKLERID().size() - abdul; i++) {
//güncelleme

                if (mouseX > 510 && mouseX < 540 && mouseY > 120 + 30 * i && mouseY < 150 + 30 * i) {
                    int silinecekindex = connection.getTÜMTAKİPEDİLEBİLECEKLERID().get(i);
                    kiminlistelerigelsin = silinecekindex;
                    adamgözetlio = true;
                    connection.createConnection();
                }
                ;
            }

            for (int i = 0; i < connection.getTÜMTAKİPEDİLEBİLECEKLERID().size() - abdul; i++) {

                //ekleme cıkarma
                if (mouseX > 550 && mouseX < 580 && mouseY > 120 + 30 * i && mouseY < 150 + 30 * i) {

                    if (!connection.getKULLANICININTAKIPETTIKLERIID().contains(connection.getTÜMTAKİPEDİLEBİLECEKLERID().get(i))) {
                        System.out.println("ekle");
                        int silinecekindex = connection.getTÜMTAKİPEDİLEBİLECEKLERID().get(i);
                        connection.getKULLANICININTAKIPETTIKLERIID().add(silinecekindex);
                        connection.setKullanıcıtakipetmekistiyor(true);
                        connection.setTakipideğişecekkullanıcııd(silinecekindex);

                        connection.createConnection();

                        connection.setKullanıcıtakipetmekistiyor(false);

                    } else {
                        System.out.println("cıkar");
                        int silinecekindex = connection.getTÜMTAKİPEDİLEBİLECEKLERID().get(i);
                        connection.getKULLANICININTAKIPETTIKLERIID().remove(connection.getKULLANICININTAKIPETTIKLERIID().indexOf(silinecekindex));
                        connection.setKullanıcıtakiptençıkmakistiyor(true);
                        connection.setTakipideğişecekkullanıcııd(silinecekindex);
                        connection.createConnection();
                        connection.setKullanıcıtakiptençıkmakistiyor(false);

                        abdul++;

                    }
                }
            }


        }


//ADMIN SARKI SILME

        abdul=0;


        for (int i = 0; i <connection.getTUMSARKILAR().size(); i++) {
            if(listea==true){
                if(i<27){
                    if(mouseX>105 &&mouseX<125 && mouseY>35+30*i && mouseY<55+30*i){
                        müzikdinliyormu=true;
                        hangi_müzigi_dinliyor=i;
                    }

                }
                if(i>26 && i<54){
                    if(mouseX>500 &&mouseX<520 && mouseY>35+30*i-810 && mouseY<55+30*i-810){
                        müzikdinliyormu=true;
                        hangi_müzigi_dinliyor=i;
                    }
                }
                if(i>53){
                    if(mouseX>870 &&mouseX<890 && mouseY>35+30*i-1620 && mouseY<55+30*i-1620){
                        müzikdinliyormu=true;
                        hangi_müzigi_dinliyor=i;

                    }

                }

            }

        }


        if (adminneyieğiştirecek.equals("Şarkı") && adminadımsayısı==3) {


            for (int i=0;i<connection.getTUMSARKILAR().size()- abdul;i++)
                if (mouseX>1000 && mouseX<1040 && mouseY>150+20*i && mouseY<190+20*i){
                    connection.setAdminşarkısilebastı(true);
                    int x=connection.getTUMŞARKIIDLER().get(i);

                    connection.setAdminhangiidlişarkıyısilecek(x);
                    connection.createConnection();
                    connection.setAdminşarkısilebastı(false);
                    connection.getTUMSARKILAR().remove(i);
                    connection.getTUMSANATCILAR().remove(i);
                    connection.getTUMŞARKIIDLER().remove(i);
                    abdul++;
                }

        }



        //ADMIN SARKI GUNCELLEME




        abdul=0;

        if (adminneyieğiştirecek.equals("Şarkı") && adminadımsayısı==3) {

            for (int i = 0; i < connection.getTUMSARKILAR().size(); i++) {
                if (mouseX > 1050 && mouseX < 1070 && mouseY > 150 + 20 * i && mouseY < 170 + 20 * i) {
                    connection.setAdminşarkıgüncelleyebastı(false);
                    connection.createConnection();
                    String textfieldeisim = textfieldbutonları2.get(Textfield.class, "adminşarkıdaisimgüncelle").getText();
                    String textfileldsanatçı = textfieldbutonları2.get(Textfield.class, "adminşarkıdasanatçıgüncelle").getText();
                    String textfieldtarih = textfieldbutonları2.get(Textfield.class, "adminsarkıdatarihgüncelle").getText();
                    String textfieltür = textfieldbutonları2.get(Textfield.class, "adminsarkıdatürgüncelle").getText();
                    String textfieldalbüm = textfieldbutonları2.get(Textfield.class, "adminsarkıdaalbümgüncelle").getText();
                    String textfieldsüre = textfieldbutonları2.get(Textfield.class, "adminsarkıdasüregüncelle").getText();
                    String textfielddinlenmesayısı = textfieldbutonları2.get(Textfield.class, "adminsarkıdadinlenmesayısıgüncelle").getText();


                    int x = connection.getTUMŞARKIIDLER().get(i);
                    connection.setAdminşarkıgüncelleyebastı(true);
                    connection.setAdminhangiidlişarkıyısilecek(x);
                    if (!textfieldeisim.equals(null)) {
                        connection.setGüncellenenşarkıadı(textfieldeisim);
                    }
                    if (!textfileldsanatçı.equals(null)) {
                        connection.setGüncellenenşarkınınsanatçısı(textfileldsanatçı);
                    }
                    if (!textfieldtarih.equals(null)) {
                        connection.setGüncellenenşarkınıntarihi(textfieldtarih);
                    }
                    if (!textfieltür.equals(null)) {
                        connection.setGüncellenenşarkınıntürü(textfieltür);
                    }
                    if (!textfieldsüre.equals(null)) {
                        connection.setGüncellenenşarkınınsüresi(textfieldsüre);
                    }
                    if (!textfielddinlenmesayısı.equals(null)) {
                        connection.setGüncellenecekşarkınındinlenmesayısı(textfielddinlenmesayısı);
                    }
                    if (!textfieldalbüm.equals(null)) {
                        connection.setGüncellenenşarkınınalbümü(textfieldalbüm);
                    }





                    connection.createConnection();

                    connection.setAdminşarkıgüncelleyebastı(false);
                    connection.getTUMSARKILAR().set(i, connection.getGüncellenenşarkıadı());
                    connection.getTUMSANATCILAR().set(i,connection.getGüncellenenşarkınınsanatçısı());


                }

            }


        }





        //ADMIN ISLEMLERI kullanıcı silme
        abdul=0;

        if (adminneyieğiştirecek.equals("Kullanıcı") && adminadımsayısı==3) {


            for (int i=0;i<connection.getTümkullanıcılarınkullanıcıadı().size()- abdul;i++)
                if (mouseX>1010 && mouseX<1030 && mouseY>150+20*i && mouseY<130+20*i){

                    connection.setAdminesilebastı(true);
                    int x=connection.getTümkullanıcılarınID().get(i);

                    connection.setHangiidlikullanıcısilinecek(x);
                    connection.createConnection();
                    connection.setAdminesilebastı(false);
                    connection.getTümkullanıcılarınID().remove(i);
                    connection.getTümkullanıcılarınkullanıcıadı().remove(i);
                    abdul++;
                }

        }



        //ADMIN ISLEMLERI Kullanıcı güncelleme






        abdul=0;
        if (adminneyieğiştirecek.equals("Kullanıcı") && adminadımsayısı==3) {


            for (int i=0;i<connection.getTümkullanıcılarınkullanıcıadı().size()- abdul;i++)
                if (mouseX>1050 && mouseX<1090 && mouseY>150+40*i && mouseY<190+40*i){
                    String textfieldemail=textfieldbutonları.get(Textfield.class,"kullanıcıguncelleemail").getText();
                    String textfiledkullanıcıadı=textfieldbutonları.get(Textfield.class,"kullanıcıguncellekullanıcı_adı").getText();
                    String textfieldşifre=textfieldbutonları.get(Textfield.class,"kullanıcıguncelleşifre").getText();
                    String textfieldülke=textfieldbutonları.get(Textfield.class,"kullanıcıguncelleülke").getText();

                    int x=connection.getTümkullanıcılarınID().get(i);
                    connection.setGüncellencekkullanıcıid(x);
                    connection.createConnection();


                    String sonmail;
                    String sonkullanıcıadı;
                    String sonşifre;
                    String  sonülke;



                    if (textfieldemail.equals("")){
                        sonmail =connection.getGüncellenecekkulanıcımail();
                    }else
                        sonmail=textfieldemail;



                    if (textfiledkullanıcıadı.equals("")){
                        sonkullanıcıadı =connection.getGüncellenecekkullanıcıadı();
                    }else
                        sonkullanıcıadı=textfiledkullanıcıadı;



                    if (textfieldşifre.equals("")){
                        sonşifre =connection.getGüncellenecekkulanıcışifre();
                    }else
                        sonşifre=textfieldşifre;



                    if (textfieldülke.equals("")){
                        sonülke =connection.getGüncellenecekkulanıcıülke();
                    }else
                        sonülke=textfieldülke;


                    connection.setGüncellenecekkullanıcıadı(sonkullanıcıadı);
                    connection.setGüncellenecekkulanıcışifre(sonşifre);
                    connection.setGüncellenecekkulanıcıülke(sonülke);
                    connection.setGüncellenecekkulanıcımail(sonmail);
                    connection.setGüncellenecekkulanıcıdurum(textfieldtogglegüncel);
                    connection.setAdminkullanıcıgüncelleyebastı(true);
                    connection.createConnection();
                    connection.setAdminkullanıcıgüncelleyebastı(false);




                }

        }



        int adamım;
        if (adim_sayisi==4   && cazseçimi==true) {
            boolean basıldı=false;





            for (int i=0;i<connection.getTümCazlar().size();i++){

                if (mouseX>530 && mouseX<560 && mouseY>75+50*i -slider  && mouseY<105  +50*i -slider && basıldı==false) {


                    adamım=connection.getTümCazlarID().get(i);


                    connection.createConnection(Kullanici_Adi,Sifre,Durum,Kayittürü,EMAIL,ULKE,adamım);
                    basıldı = true;




                }
            }



        }





        //POPLAR

        if (adim_sayisi==4   && popseçimi==true) {
            boolean basıldı = false;


            for (int i = 0; i < connection.getTümPoplar().size(); i++) {

                if (mouseX > 530 && mouseX < 560 && mouseY > 75 + 50 * i - slider && mouseY < 105 + 50 * i - slider && basıldı == false) {


                    adamım = connection.getTümPoplarID().get(i);


                    connection.createConnection(Kullanici_Adi, Sifre, Durum, Kayittürü, EMAIL, ULKE, adamım);
                    basıldı = true;


                }
            }

        }
        //KLASIK


        if (adim_sayisi == 4 && klasikseçimi == true) {
            boolean   basıldı = false;


            for (int i = 0; i < connection.getTümKlasikler().size(); i++) {

                if (mouseX > 530 && mouseX < 560 && mouseY > 75 + 50 * i - slider && mouseY < 105 + 50 * i - slider && basıldı == false) {


                    adamım = connection.getTümKlasiklerID().get(i);


                    connection.createConnection(Kullanici_Adi, Sifre, Durum, Kayittürü, EMAIL, ULKE, adamım);
                    basıldı = true;


                }
            }


        }


    }




    public void adminsanatçıekledesubmit(){
        String şanatçıadı=textfieldbutonları3.get(Textfield.class,"adminsanatçıdaisimekle").getText();
        String ülke=textfieldbutonları3.get(Textfield.class,"adminsanatçıdaülkeeklee").getText();
        connection.setEklenileceksanatçı(şanatçıadı);
        connection.setEklenileceksanatçıyaülke(ülke);

        connection.setAdminsanatçıekleyebastı(true);
        connection.createConnection();
        connection.setAdminsanatçıekleyebastı(false);


    }


    public void kullanıguncellepremium(){
        if ( textfieldtogglegüncel.equals("Normal"))
            textfieldtogglegüncel="Premium";
        else
            textfieldtogglegüncel="Normal";

    }

    public void adminşarkıekledesubmit(){
        String şarkı_adı=textfieldbutonları2.get(Textfield.class,"adminşarkıdaisimekle").getText();
        String tarih=textfieldbutonları2.get(Textfield.class,"adminsarkıdatarihekle").getText();
        String sanatçı=textfieldbutonları2.get(Textfield.class,"adminşarkıdasanatçıeklee").getText();
        String Albüm=textfieldbutonları2.get(Textfield.class,"adminsarkıdaalbümekle").getText();
        String tür=textfieldbutonları2.get(Textfield.class,"adminsarkıdatürekle").getText();
        String süre=textfieldbutonları2.get(Textfield.class,"adminsarkıdasüreekle").getText();
        connection.setAdminşarkıadıekliyor(şarkı_adı);
        connection.setAdmintarihekliyor(tarih);
        connection.setAdminsanatçıekliyor(sanatçı);
        connection.setAdminalbümekliyor(Albüm);
        connection.setAdmintürekliyor(tür);
        connection.setAdminsüreekliyor(süre);
        connection.setAdminşarkıekleyebasti(true);
        connection.createConnection();
        connection.setAdminşarkıekleyebasti(false);


    }
    public void kullanıeklepremium(){
        if (   admınkullanıcıeklicekpremiumdurumu=="Normal"){
            admınkullanıcıeklicekpremiumdurumu="Premium";
        }
        else
            admınkullanıcıeklicekpremiumdurumu="Normal";



    }





    public void kullanıcıeklesubmit(){

        String email=textfieldbutonları.get(Textfield.class,"kullanıcıekleemail").getText();
        String kullanıcıadı=textfieldbutonları.get(Textfield.class,"kullanıcıeklekullanıcı_adı").getText();
        String şifre=textfieldbutonları.get(Textfield.class,"kullanıcıekleşifre").getText();
        String ülke=textfieldbutonları.get(Textfield.class,"kullanıcıekleülke").getText();
        connection.setAdminkullanıcıadıekliyor(kullanıcıadı);
        connection.setAdminkullanıcımailekliyor(email);
        connection.setAdminekleyebastı(true);
        connection.setAdminkullanıcıpremiumekliyor(admınkullanıcıeklicekpremiumdurumu);
        connection.setAdminkullanıcışifreekliyor(şifre);

        connection.createConnection();
        connection.setAdminekleyebastı(false);

    }
    public void  ALBUMISLEMLERI(){
        adminneyieğiştirecek="Albüm";
    }


    public void  SANATCIISLEMLERI(){
        adminneyieğiştirecek="Sanatçı";
    }

    public void  KullanıcıIslemleri(){
        adminneyieğiştirecek="Kullanıcı";
    }


    public void  SARKIISLEMLERI(){
        adminneyieğiştirecek="Şarkı";
    }

    public void  CALMALISTEISLEMLERI(){
        adminneyieğiştirecek="Liste";

    }




    public void popgüncelleme() {
        popseçimi = true;
        listebutonz.setVisible(false);
        connection.createConnection(connection.getResult2(), connection.getKopyaşifre(), connection.getResult3(), connection.getResult5(), EMAIL, ULKE, -1);
    }

    public void cazgüncelleme(){
        cazseçimi=true;
        listebutonz.setVisible(false);

        connection.createConnection(connection.getResult2(),connection.getKopyaşifre(),connection.getResult3(),connection.getResult5(),EMAIL,ULKE,-1);
    }

    public void klasikgüncelleme(){
        klasikseçimi=true;
        listebutonz.setVisible(false);
        connection.createConnection(connection.getResult2(),connection.getKopyaşifre(),connection.getResult3(),connection.getResult5(),EMAIL,ULKE,-1);
    }

    public void liste(){
        listeb=true;
    }
    public void Şarkı_Dinle(){
        listea=true;
    }
    public void Submit(){
        teksefer=0;
        teksefer2=0;
        listesayacı=0;
        if(adminb==true ||kullanicib==true){
            Kullanici_Adi=b.get(Textfield.class,"KULLANICI_ADI").getText();
            Sifre=b.get(Textfield.class,"SIFRE").getText();
            connection.setResult2(null);
            connection.createConnection(Kullanici_Adi,Sifre,Durum,Kayittürü,EMAIL,ULKE,-1);
            if(connection.getResult2()!=null) {
                submit_kontrol = true;
                b.remove(this);
                connection.setKopyaşifre(Sifre);
            }



            Kullanici_Adi=null;
            Sifre=null;
        }


    }
    public void KAYITOL(){
        Kullanici_Adi=z.get(Textfield.class,"KULLANICI_ADI").getText();
        Sifre=z.get(Textfield.class,"SIFRE").getText();
        ULKE=z.get(Textfield.class,"ULKE").getText();
        EMAIL=z.get(Textfield.class,"EMAIL").getText();
        EMAIL=z.get(Textfield.class,"EMAIL").getText();
        connection.setResult2(null);
        connection.createConnection(Kullanici_Adi,Sifre,Durum,Kayittürü,EMAIL,ULKE,-1);

    }





    public void GERI(){



        listea=false;

        if (listec==true && adamgözetlio==true){
            adamgözetlio=false;
        }

        if (listec==true && adamgözetlio==false){
            listec=false;
        }

        if (adminadımsayısı==2){
            textfieldbutonları.remove(this);
            textfieldsayacı=0;
            adminneyieğiştirecek="";
            adminpaneli.setVisible(false);

        }

        else if (adminadımsayısı==3){
            textfieldbutonları2.remove(this);
            textfieldbutonları3.remove(this);
            textfieldbutonları.remove(this);
            textfieldsayacı=0;
            textfieldsayacı2=0;
            textfieldsayacı3=0;
            adminneyieğiştirecek="";
            adminadımsayısı=2;
            adminpaneli.setVisible(true);

        }


        teksefer=0;
        teksefer2=0;
        müzikdinle.remove(this);
        listesayacı=0;
        listebutonz.remove(this);
        abidin=0;
        abidinolsamkeşke=0;
        klasikseçimi=false;
        cazseçimi=false;
        popseçimi=false;
        b.remove(this);
        z.remove(this);
        if(adim_sayisi==1){
            adminb=false;
            kullanicib=false;
            kayitb=false;

            submit_kontrol=false;
            adminmi=false;
            Kullanici_Adi=" ";
            Sifre=" ";
            Durum=null;
            adim_sayisi=0;
            EMAIL=null;
            ULKE=null;
            connection.getGenel_top_10().clear();
            connection.getUlkeye_gore_top_10_liste().clear();
            connection.getPop().clear();
            connection.getCaz().clear();
            connection.getKlasik().clear();
            connection.getTop_10_şarkıcıları().clear();
            connection.getYerel_top_10_şarkıcıları().clear();
            connection.getCaz_şarkıcı().clear();
            connection.getPop_şarkıcı().clear();
            connection.getKlasik_şarkıcı().clear();
        }
        else if(adim_sayisi==2){


            listesayacı=0;
            listebutonları.remove(this);
            submit_kontrol=false;
            Kullanici_Adi=" ";
            Sifre=" ";
            adim_sayisi=1;
            EMAIL=null;
            ULKE=null;
            connection.getGenel_top_10().clear();
            connection.getUlkeye_gore_top_10_liste().clear();
            connection.getPop().clear();
            connection.getCaz().clear();
            connection.getKlasik().clear();
            connection.getTop_10_şarkıcıları().clear();
            connection.getYerel_top_10_şarkıcıları().clear();
            connection.getCaz_şarkıcı().clear();
            connection.getPop_şarkıcı().clear();
            connection.getKlasik_şarkıcı().clear();
        }
        else if(adim_sayisi==3){
            listeb=false;
            adim_sayisi--;
            listebutonları.setVisible(true);


        }
        else if(adim_sayisi==4){
            klasikseçimi=false;
            cazseçimi=false;
            popseçimi=false;
            sliderclas.remove(this);
            slidersayaç=0;
        }
    }
    public void ADMIN(){ adminb=true;}
    public void KULLANICI(){
        kullanicib=true;
    }
    public void KAYIT(){ kayitb=true; }
    public void PREMIUM(){
        abidin2++;
        if(abidin2%2==1){
            Kayittürü="Premium";
        }
        else if(abidin2%2==0){
            Kayittürü="Normal";
        }


    }

}